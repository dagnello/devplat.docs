<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic41966">
<title>HPE Helion Public Cloud CLI Software for Windows PowerShell: Object Storage Examples</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
<othermeta name="Generator" content="Microsoft Word 14 (filtered)"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./publiccloud/cli.windows.2.containers-and-folders.md-->
 <!--permalink: /publiccloud/cli/windows/containers-and-folders/--></p>
<p>One of the key features of the HPE Helion Public Cloud CLI software for Windows PowerShell Object Storage is that it provides a way to store and retrieve objects in a highly redundant cluster of publicly accessible physical machines hosted in HPE data centers.  This page provides examples for how to use Object Storage via the Windows PowerShell CLI.  (See the <xref href="../publiccloud/object-storage.dita" >HPE Helion Public Cloud Object Storage Overview</xref> for overview information on Object Storage.)</p>
<p><b>Note:</b> When referencing an argument, like a container name, that has a space, use quotes to access that resource. For example:</p>
<codeblock>
PS: HPCS:\&gt; cd "my container:"
PS: HPCS:\&gt; new-container -name "my new container"
</codeblock>
<p>
<b>Note</b>: The HPE Helion Public Cloud CLI software for Windows PowerShell supports the <xref href="http://msdn.microsoft.com/en-us/library/windows/desktop/aa717088(v=vs.85).aspx" scope="external" format="html" >standard Windows wildcard</xref> characters asterix (<codeph>*</codeph>), question mark (<codeph>?</codeph>), and range brackets (<codeph>[]</codeph>) for the <codeph>ls, copy</codeph> and <codeph>delete</codeph> object storage commands.</p>
<section id="InteractingwiththeStorageService"> <title>Interacting with the Storage Service</title>
<p>This page contains the following examples:</p>
<ul>
<li>
<xref type="section" href="#topic41966/CreatingStorageContainers">Creating Storage Containers</xref>
</li>
<li>
<xref type="section" href="#topic41966/StoragePaths">Storage Paths</xref>
</li>
<li>
<xref type="section" href="#topic41966/CreatingFolders">Creating Folders</xref>
</li>
<li>
<xref type="section" href="#topic41966/FolderOperations">Folder Operations</xref>
</li>
<li>
<xref type="section" href="#topic41966/DeletingFolders">Deleting Folders</xref>
</li>
<li>
<xref type="section" href="#topic41966/WorkingwithMetaData">Working with MetaData</xref>
</li>
<li>
<xref type="section" href="#topic41966/ChangingResponseFormats">Changing Response Formats</xref>
</li>
<li>
<xref type="section" href="#topic41966/ChangingConfigurationFiles">Changing Configuration Files</xref>
</li>
<li>
<xref type="section" href="#topic41966/ViewingYourServiceCatalog">Viewing Your Service Catalog</xref>
</li>
<li>
<xref type="section" href="#topic41966/FindinganObjectsLocation">Finding an Object's Location</xref>
</li>
<li>
<xref type="section" href="#topic41966/AddingandRemovingDrives">Adding and Removing Drives</xref>
</li>
<li>
<xref type="section" href="#topic41966/GettingVersionInformation">Getting Version Information</xref>
</li>
<li>
<xref type="section" href="#topic41966/UsingAnotherUsersCredentials">Using Another User's Credentials</xref>
</li>
<li>
<xref type="section" href="#topic41966/ViewingtheReleaseNotes">Viewing the Release Notes</xref>
</li>
<li>
<xref type="section" href="#topic41966/MigratingYourFiles">Migrating Your Files From Another Storage System</xref>
</li>
</ul>
</section>
<section id="CreatingStorageContainers"> <title>Creating Storage Containers</title>
<p>Storage Containers act as a fundamental unit of storage in HPE Object Storage. These items are very similar to disk volumes that one would traditionally use to maintain a set of hierarchically organized folders. PowerShell offers a natural way to represent these Storage Containers through the use of Providers. Instances of these Powershell providers are called drives and each storage container that you create is represented as one. To illustrate this concept let's first create a Storage Container with the <codeph>New-Container</codeph> command. When Powershell first opens, use the <codeph>cd HPCS:</codeph> command to use the HPCS providers</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
===============================================================

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS C:\Program Files (x86)\HP\HPCS-Powershell&gt; cd HPCS:
PS HPCS:\&gt; new-container -name demo

Storage Container demo created successfully.

PS HPCS:\&gt; 
</codeblock>
<p>Now we can list out all of the available PowerShell drives on the system and we should see the Storage Container that we just created.</p>
<codeblock>
PS b1:\&gt; get-psdrive

Name        Used (GB)    Free (GB)  Provider         Root
----        ---------    ---------  --------         ----
Alpha                               HP-Objects. . .  /
Alias                               Alias   
Beta                                HP-Objects. . .  /
Beta2                               HP-Objects. . .  /
C              240.17      1620.85  FileSystem       C:\
D                                   FileSystem       \    
demo                                HP-Objects. . .  /
. . .
</codeblock>
<p>In the example above, notice the value of "HP-Objects..."  in the "Provider" column. These are HP-Cloud Object Storage drives that you can mount like any other drive with the <codeph>CD</codeph> command.</p>
<codeblock>
PS con1:\&gt; cd demo:
PS demo:\&gt; ls

===============================================================
Storage Container : demo
Directory of      : demo \
===============================================================

Total # Folders found    : 0
Total # Items Found      : 0
Total # Bytes in Folder  : 0

PS demo:\&gt; 
</codeblock>
<p>One caveat when creating new Storage Containers is that you must be attached to an existing Storage Container to have newly created Storage Containers show up in the Get-PsDrive results without a shell restart. The first time that you open the shell you won't have any Storage Containers to attach to. In this case, just CD to the default drive with:</p>
<codeblock>
CD HPSO-Init: 
</codeblock>
<p>At this point you can issue the <codeph>New-Container</codeph> command and a subsequent issuance of Get-PSDrive lists what you just created (The default drive will not show up the next time you load the shell as it exists only temporarily to bootstrap the Storage Container creation process). Now it's time to take the file system for a spin but before we do that, let's go over a few basic concepts.</p>
</section>
<section id="StoragePaths"> <title>Storage Paths</title>
<p>Storage paths in this system come in a few different varieties. People familiar with command line interfaces should feel at home with the ways that you can express a resources location within a HP-Cloud Object Storage based data store. The following resource addressing styles are supported by this Storage Provider.</p>
<table outputclass="MsoTableLightShading">
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<tbody>
<row>
<entry><b><ph>Name</ph></b></entry>
<entry><b><ph>Description</ph></b></entry>
<entry><b><ph>Example</ph></b></entry>
</row>
<row>
<entry><ph>Fully Qualified \ Absolute Paths</ph></entry>
<entry><ph>This type of path includes the entire address to the resource including the Storage Container name.</ph></entry>
<entry><ph>Storage Container\Folder1\Folder2</ph></entry>
</row>
<row>
<entry><ph>Relative Paths (Adjacent Folder)</ph></entry>
<entry><ph>This type of path simply specifies the adjacent folder.</ph></entry>
<entry><ph>PS TestStorage Container:\Folder1&gt; ls Folder2 (Where Folder2 is a direct descendant of Folder1)</ph></entry>
</row>
<row>
<entry><ph>Relative Paths (Deep Node)</ph></entry>
<entry><ph>This Path gives a deep address to a node in the tree relative to its current position.</ph></entry>
<entry><ph>PS TestStorage Container :\Folder1&gt; ls Folder2 \ Folder3 \ Folder4</ph></entry>
</row>
<row>
<entry><ph>Implicit Target Path</ph></entry>
<entry><ph>This is when the target path is omitted from a command. In these circumstances, the command will assume the current folder to be the target</ph></entry>
<entry><ph>PS TestStorage Container:\Folder1&gt; Copy c:\Documents\Test.xml</ph></entry>
</row>
</tbody>
</tgroup>
</table>
<p>Here are some example directory listings (ls) of folders using the various addressing styles described above..</p>
<codeblock>
PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    File    2011-11-14T2...
builds                                      1       Folder  2011-11-15T2...
r                                           1       Folder  2011-11-14T2...
t                                           1       Folder  2011-11-14T2...
test                                        1       Folder  2011-11-14T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 4
Total # Items Found       : 1
Total # Bytes in Folder   : 3572


PS b1:\&gt; ls test\
------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    File    2011-11-14T2...
anothertest2.txt                            3572    File    2011-11-14T2...
big file.dll                                106496  File    2011-11-14T2...
SomeFolder                                  1       Folder  2011-11-14T2...
This                                        1       Folder  2011-11-14T2...
d1                                          1       Folder  2011-11-14T2...
foo                                         1       Folder  2011-11-14T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 4
Total # Items Found       : 3
Total # Bytes in Folder   : 113460


PS b1:\&gt; ls test\foo
------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 0
Total # Bytes in Folder   : 0

PS b1:\&gt;
</codeblock>
</section>
<section id="CreatingFolders"> <title>Creating Folders</title>
<p>Creating a Folder in HP-Cloud Object Storage is as easy as issuing the MD command..</p>
<codeblock>
PS demo:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : demo
Directory of      : demo \
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 0
Total # Bytes in Folder   : 0

PS demo:\&gt; md newFolderTest
PS demo:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : demo
Directory of      : demo \
------------------------------------------------------------------------------------------------------


Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
newFolderTest                               1       Folder  2011-09-27T1...
------------------------------------------------------------------------------------------------------

Total # folders found     : 1
Total # Items Found       : 0
Total # Bytes in Folder   : 0


PS demo:\&gt; cd newFolderTest
PS demo:\newFolderTest&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : demo
Directory of      : demo \newFolderTest
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 0
Total # Bytes in Folder   : 0

PS demo:\newFolderTest&gt;
</codeblock>
<p>Based on our supported Storage Path styles we can also create directory structures like so..</p>
<codeblock>
PS demo:\&gt; md d1
PS demo:\&gt; md d1\d2
PS demo:\&gt; md d1\d2\d3
PS demo:\&gt; 
</codeblock>
<p>This will create a hierarchy of folders with D1 acting as the root, D2 as its immediate descendant, with D3 being the terminal node.</p>
</section>
<section id="FolderOperations"> <title>Folder Operations</title>
<p>When you consider the sheer quantity of data that could be potentially moved into the cloud you soon realize that operations on individual files are impractical at best. To remedy this we have the ability to copy entire sets of objects from your local machine to the store, within the store, and to your local machine in one operation. Each of these commands can be tailored to affect a specific folders contents, or any descendant folders beneath the target path. To address a folder, remember to include a trailing <codeph>/</codeph> on the end of each path to indicate that you are working with a folder and not an individual file.</p>
<p><b>Example: Local-to-Server Copy</b></p>
<p>In this example, we're making a copy of the local folder named Test to the current location on the server which is the root directory. The lack of target path will force the system to assume the current location is the target (this is also true of individual files).  Notice that when the operation completes that a new Folder named Test has been created off of root, in other words folder operations are inclusive of the container that you're pointing to.</p>
<codeblock>
PS b1:\&gt; copy c:\test\

Copying c:\test\anothertest.txt
Copying c:\test\anothertest2.txt
Copying c:\test\big file.dll

------------------------------------------------------------------------------------------------------
Operation Summary
------------------------------------------------------------------------------------------------------
Total Files Copied : 3
Total Bytes Copied : 113640

PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
test                                        1       Folder  2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 1
Total # Items Found       : 0
Total # Bytes in Folder   : 0


PS b1:\&gt; cd test
PS b1:\test&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \test
------------------------------------------------------------------------------------------------------

Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             1       File    2011-09-10T2...
anothertest2.txt                            1       File    2011-09-10T2...
big file.dll                                106496  File    2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 3
Total # Bytes in Folder   : 113640

PS b1:\test&gt;
</codeblock>
<p><b>Example: Local-to-Server Copy (Recursive)</b></p>
<p>Here's another example of a Local to Remote copy but this time we will push an entire hierarchy of folders as shown below.</p>
<codeblock>
PS b1:\&gt; copy c:\test\ -recurse

Copying c:\test\anothertest.txt
Copying c:\test\anothertest2.txt
Copying c:\test\big file.dll
Copying c:\test\d1\anothertest.txt
Copying c:\test\d1\d2\anothertest2.txt
Copying c:\test\d1\d2\d3\anothertest.txt
Copying c:\test\SomeFolder\DLEEeula.txt
Copying c:\test\SomeFolder\DLEEeual_WEB.txt
Copying c:\test\SomeFolder\DLEEinsr.dll
Copying c:\test\SomeFolder\DLEEjswr.dll
Copying c:\test\SomeFolder\AnotherFolder\DLEEjswr.dll
Copying c:\test\SomeFolder\AnotherFolder\OneMoreFolder\DLEEeula.txt
Copying c:\test\SomeFolder\AnotherFolder\OneMoreFolder\DLEEjswr.dll
Copying c:\test\This\bigfile.dll
Copying c:\test\This\CallResult.cs
Copying c:\test\This\CLI.config
Copying c:\test\This\ContainerService.wsdl
Copying c:\test\This\ExampleXML.xml
Copying c:\test\This\ExceptionFactory.cs
Copying c:\test\This\Hp Scalene SDK.vsmdi
Copying c:\test\This\HP.Scalene.SDK.sln
Copying c:\test\This\HP.Scalene.SFK.suo
Copying c:\test\This\JSONContent.cs
Copying c:\test\This\SwiftExample.txt
Copying c:\test\This\test.xml
Copying c:\test\This\XMLContnet.cs
Copying c:\test\This\yp.txt

------------------------------------------------------------------------------------------------------
Operation Summary
------------------------------------------------------------------------------------------------------
Total Files Copied : 27
Total Bytes Copied : 372650
</codeblock>
<p><b>Example: Server-To-Local Copy</b></p>
<p>Now for the sake of completeness, let's throw this entire set of folders back to the client</p>
<codeblock>
PS b1:\&gt; ls test\


------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    File    2011-09-10T2...
anothertest2.txt                            3572    File    2011-09-10T2...
big file.dll                                106496  File    2011-09-10T2...
SomeFolder                                  1       Folder  2011-09-10T2...
This                                        1       Folder  2011-09-10T2...
d1                                          1       Folder  2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 3
Total # Items Found       : 3
Total # Bytes in Folder   : 113640


PS b1&gt;\&gt; copy test\ c:\incoming\ -recurse

Copying test/anothertest.txt
Copying test/anothertest2.txt
Copying test/big file.dll
Copying test/SomeFolder/DLEEeula.txt
Copying test/SomeFolder/DLEEeual_WEB.txt
Copying test/SomeFolder/DLEEinsr.dll
Copying test/SomeFolder/DLEEjswr.dll
Copying test/SomeFolder/AnotherFolder\DLEEjswr.dll
Copying test/SomeFolder/AnotherFolder\OneMoreFolder\DLEEeula.txt
Copying test/SomeFolder/AnotherFolder\OneMoreFolder\DLEEjswr.dll

------------------------------------------------------------------------------------------------------
Operation Summary
------------------------------------------------------------------------------------------------------
Total Files Copied : 10
Total Bytes Copied : 127630
</codeblock>
<p>Done...</p>
<p>Now let's make sure that we can move these folders around on the server.</p>
<codeblock>
PS b1&gt;\&gt; md testIncoming
PS b1:\&gt; copy test\ testIncoming\ -recurse

Copying test/anothertest.txt
Copying test/anothertest2.txt
Copying test/big file.dll
Copying test/SomeFolder/DLEEeula.txt
Copying test/SomeFolder/DLEEeual_WEB.txt
Copying test/SomeFolder/DLEEinsr.dll
Copying test/SomeFolder/DLEEjswr.dll
Copying test/SomeFolder/AnotherFolder\DLEEjswr.dll
Copying test/SomeFolder/AnotherFolder\OneMoreFolder\DLEEeula.txt
Copying test/SomeFolder/AnotherFolder\OneMoreFolder\DLEEjswr.dll

------------------------------------------------------------------------------------------------------
Operation Summary
------------------------------------------------------------------------------------------------------
Total Files Copied : 10
Total Bytes Copied : 207560
</codeblock>
</section>
<section id="DeletingFolders"> <title>Deleting Folders</title>
<p>Finally, when we're done with a folder we can simply remove it. Note that when you delete a folder, all of its contents are deleted along with any child folders as well.</p>
<codeblock>
PS b1:\&gt; ls


------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
test                                        1       Folder  2011-09-10T2...
testIncoming                                1       Folder  2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 2
Total # Items Found       : 0
Total # Bytes in Folder   : 0


PS b1&gt;\&gt; del test\
PS b1:\&gt; del testIncoming\
PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


Total # folders found     : 0
Total # Items Found       : 0
Total # Bytes in Folder   : 0


PS b1:\&gt;
</codeblock>
</section>
<section id="WorkingwithMetaData"> <title>Working with MetaData</title>
<p>When required, you have the ability to store user defined meta-data along with the objects placed within a Container. This is accomplished with the  set-metadata cmdlet. Input values for this parameter are a series of one to many key value pairs. Each Key Value pair must be enclosed in quotes and separated by the Pipe (|) character. Individual Key Values Pairs are delimited by a comma. For example..</p>
<codeblock>
PS b1:\&gt; set-metadata anothertest.txt -md "author|Travis", "priority|high"
PS b1:\&gt; get-metadata anothertest.txt
------------------------------------------------------------------------------------------------------
Meta-Data for anothertest.txt is as follows.    
------------------------------------------------------------------------------------------------------

Key   = Priority
Value = high
--------------------------------
Key   = Author
Value = Travis
--------------------------------

PS b1:\&gt;
</codeblock>
<p>In addition, you can also see how one would view meta-data on an existing object with the Get-MetaData command.</p>
</section>
<section id="ChangingResponseFormats"> <title>Changing Response Formats</title>
<p>Each command that you issue through the Provider or through a cmdlet will write out the response returned from the server in an easy to understand, human readable format. For a command line tool, this is the behavior one would expect. The CLI can also reformat each response depending on your need. This is accomplished through the Set-Format cmdlet. With this cmdlet you can specify the response to be one of three formats</p>
<ul>
<li>Data (the default)</li>
<li>XML</li>
<li>JSON</li>
</ul>
<p>This cmdlet will take effect for the duration of the Session only.</p>
<p><b>Example: XML Based Responses</b></p>
<p>This example shows how we can quickly produce an XML file of what we find in the test folder. In addition, output received from cmdlets adhere to the format as well. Note the response of the "ls" command.</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
------------------------------------------------------------------------------------------------------

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    Folder  2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 1
Total # Items Found       : 1
Total # Bytes in Folder   : 3572


PS b1&gt;\&gt; set-format -rf XML

Response format set to SML.

PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------


&lt;?xml version="1.0"&gt;
&lt;container xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
  &lt;FolderNames /&gt;
  &lt;object&gt;
    &lt;name&gt;anothertest.txt&lt;/name&gt;
    &lt;content_type&gt;text/plain&lt;/content_type&gt;
    &lt;ObjectType&gt;File&lt;/ObjectType&gt;
    &lt;StorageObjectType&gt;File&lt;/StorageObjectType&gt;
    &lt;ResponseDate&gt;0001-01-01T00:00:00&lt;/ResponseDate&gt;
    &lt;IsDeleted&gt;False&lt;/IsDeleted&gt;
    &lt;bytes&gt;3572&lt;/bytes&gt;
    &lt;last_modified&gt;2011-11-10T20:59:32.457171&lt;/last_modified&gt;
    &lt;hash&gt;1d9ce6c7e631662b3268c35416fa76aa&lt;/hash&gt;
    &lt;Key&gt;anothertest.txt&lt;/Key&gt;
  &lt;/object&gt;
&lt;/container&gt;

PS b1:\&gt;
</codeblock>
<p>A quick JSON example.</p>
<codeblock>
PS b1:\&gt; set-format -rf JSON

Response format set to JSON

PS b1:\&gt;&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

{"FolderNames":[],"list":[{"ContentType":"text\/plain","ETag":"1d9ce6c7e631662b3268c35416fa76aa","ExtendedProtocol"}]}

PS b1:\&gt; ls        

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    File    2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 1
Total # Bytes in Folder   : 3572


PS b1:\&gt; ls
</codeblock>
</section>
<section id="ChangingConfigurationFiles"> <title>Changing Configuration Files</title>
<p>This system persist its settings in the CLI.config file located in the users application directory. This file is important as it's used for storing Credentials, connection information such as addresses and timeout values, and various other settings. Each time the shell loads, this file is opened and it's settings are used throughout the session. There may be times when you wish to temporarily change these settings to accommodate impersonation, environment change (Pro, QA etc) or other testing scenarios. This can be done in one of two ways:</p>
<ul>
<li>Per item </li>
<li>Per Configuration</li>
</ul>
<p>First, to see what the current configuration you are running under use the Get-Config cmdlet.  Assume that connectivity issues have required us to increment the http timeout period for each connection. This specific value can be altered via the Set-Config cmdlet.</p>
<codeblock>
PS b1:\&gt; get-config

------------------------------------------------------------------------------------------------------
Current Session Settings are as follows.
------------------------------------------------------------------------------------------------------

Configuration file located at C:\Users\Paybackman\Documents\HP\CLI.config

Name                            Value
----                            -----
TeststorageContainer            testcom
AuthKey
delimiter                       /
TeststorageContainerSecondary   b10
StorageManagementURI            https://region-a.geo-1.objects.hpcloudsvc.com/auth/v1.0/
HttpTimeoutInterval             2000
AuthUser
Host                            https://region-a.geo-1.objects.hpcloudsvc.com/auth/v1.0/
PasteGetURIResultsToClipboard   true
TestFilePath                    c:\documentst\anothertest.txt
max-keys                        1000

PS b1:\&gt; set-config -k "HttpTimeoutInterval" -v "100"
PS b1:\&gt; get-config

------------------------------------------------------------------------------------------------------
Current Session Settings are as follows.
------------------------------------------------------------------------------------------------------

Configuration file located at C:\Users\Paybackman\Documents\HP\CLI.config

Name                            Value
----                            -----
TeststorageContainer            testcom
AuthKey
delimiter                       /
TeststorageContainerSecondary   b10
StorageManagementURI            https://region-a.geo-1.objects.hpcloudsvc.com/auth/v1.0/
HttpTimeoutInterval             100
AuthUser
Host                            https://region-a.geo-1.objects.hpcloudsvc.com/auth/v1.0/
PasteGetURIResultsToClipboard   true
TestFilePath                    c:\documentst\anothertest.txt
max-keys                        1000


PS b1:\&gt; ls        
</codeblock>
<p>If you want to revert back to the defaults as defined in your CLI.config file just issue the following command.</p>
<codeblock>Set-config -resetcfg</codeblock>
<p>In addition to changing individual configuration items, you can also swap in entire full configuration environments by inserting a new configuration file with the <codeph>set-config -s</codeph> command.  This is useful if you are using multiple environments at your site--for example, you have a set of credentials that you use for development, but a different set of credentials for performing testing.  Substituting in a different config file gives you a quick way to switch back and forth between those environments.</p>
<p>When you set to a new config file and the new file contains different credentials, you have to re-evaluate the list of Containers that the current user has access to. Changing your credentials is equivalent to changing your identity, and you may own just a small subset of Containers after the change. In this example you can see this rebinding in action.</p>
<codeblock>
PS dogs:\&gt; get-config

------------------------------------------------------------------------------------------------------
Current Session Settings are as follows.
------------------------------------------------------------------------------------------------------

Configuration file located at C:\Users\tplummer\Documents\HP\CLI.config

Name                            Value
----                            -----
LocalTestDirectory              e:\Projects\Testing\
TestFilePath                    e:\Projects\Testing\Anothertest.txt
PasteGetURIResultsToClipboard   false
DefaultTenantId                 13696299374008
TeststorageContainerSecondary   b10
max-keys                        10000
HttpTimeoutInterval             15000
AccessKey                       ***********
TeststorageContainer            testcon
AuthenticationServiceURI        https://csnode.systest2.aw1.hpcloud.net:35357/v2.0/tokens
SecretKey                       ***********
delimiter                       /
ReleaseNotesURI                 https://region-a.geo-1.objects.hpcloudsvc.com:443/v1/AUTH_2485a207-71a4-4429-9e24-


PS b1:\&gt; set-config -s C:\Projects\HPCloud\DotNetSDK\HPCloud.Client.Powershell\HPCloud.Client.Powershell\Deploy
PS b1:\&gt; get-config

------------------------------------------------------------------------------------------------------
Binding to new Account. New service catalog is as follows.
------------------------------------------------------------------------------------------------------

Type                Name                    Provider Name
----                ----                    -------------
hpext:cdn           CDN                     Unknown
object-store        Object Storage          HP-ObjectStorage
identity            Identity                Unknown
image               Image Management        Unknown
Volume          Block Storage           Unknown
compute             Compute                 HPCloud-ComputeDrive

------------------------------------------------------------------------------------------------------
Object Storage Services available. Remapping to the following drives.
------------------------------------------------------------------------------------------------------

Storage Container : ECOM-61 now available.
Storage Container : ECOM-71 now available.
Storage Container : ECOM-81 now available.
Storage Container : [Invalid.container3] now available
Storage Container : [Sya2_QA_Container3] now available
Storage Container : [Sya2_QA_Conttainer6] now available
Storage Container : [Sya2_node1_Container5] now available
Storage Container : [Sya2_node1_Container6] now available
Storage Container : [Systest2-CDN-3] now available
Storage Container : [Systest2-CDN-4] now available
Storage Container : [testtest] now available
Storage Container : [yQAContainer6] now available
Storage Container : [yQAContainer8] now available

PS dogs:\&gt;    
</codeblock>
</section>
<section id="ViewingYourServiceCatalog"> <title>Viewing Your Service Catalog</title>
<p>If you want to take a look at your service catalog--for example, if you have modified some of your configuration credentials, and have authenticated them--you can use the <codeph>get-config -v</codeph> command, as shown below:</p>
<codeblock>
PS dogs:\&gt; get-catalog

------------------------------------------------------------------------------------------------------
You have access to the following services.
------------------------------------------------------------------------------------------------------

Type                Name                    Provider Name
----                ----                    -------------
hpext:cdn           CDN                     Unknown
object-store        Object Storage          HP-ObjectStorage
identity            Identity                Unknown
image               Image Management        Unknown
volume          Block Storage           Unknown
compute             Compute                 HPCloud-ComputeDrive

PS dogs:\&gt; get-catalog -v

------------------------------------------------------------------------------------------------------
You have access to the following services.
------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------
Service : CDN
------------------------------------------------------------------------------------------------------

General

Name            : CDN
Type            : hpext:cdn
Provider Name   : Unknown

Associated Endpoints

Region          : region-a.geo-1
Public URL      : https://cdnmgmt.systest2.aw1.hpcloud.net/v1.0/AUTH_ed097cde-cb84-4d72-b37e-a4be48c98d0
Internal URL    :
Admin URL       :
Version         : 1.0
Version Info    :
Version List    :

------------------------------------------------------------------------------------------------------
Service : Object Storage
------------------------------------------------------------------------------------------------------

General

Name            : Object Storage
Type            : object-store
Provider Name   : HP-ObjectStorage

Associated Endpoints

Region          : region-a.geo-1
Public URL      : https://cdnmgmt.systest2.aw1.hpcloud.net/v1.0/AUTH_ed097cde-cb84-4d72-b37e-a4be48c98d0
Internal URL    :
Admin URL       : https://objects.systest2.aw1.hpcloud.net/v1.0/
Version         : 1.0
Version Info    :
Version List    :

PS dogs:\&gt; get-catalog
</codeblock>
<p>This command provides you with all the service catalog information for your most-currently authenticated credential set.</p>
</section>
<section id="FindinganObjectsLocation"> <title>Finding an Object's Location</title>
<p>The contents of the Object store are URI addressable given that you have the proper permissions to view the resource. If you would like a quick way to load the object into your browser, a fully qualified URI can be obtained with the <codeph>Get-Uri cmdlet</codeph>.</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
------------------------------------------------------------------------------------------------------

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS b1:\&gt; ls

------------------------------------------------------------------------------------------------------
Storage Container : b1
Directory of      : b1 \
------------------------------------------------------------------------------------------------------

Name                                        Size    Type    Last Modified
----                                        ----    ----    -------------
anothertest.txt                             3572    File    2011-09-10T2...
------------------------------------------------------------------------------------------------------

Total # folders found     : 0
Total # Items Found       : 1
Total # Bytes in Folder   : 3572


PS b1:\&gt; get-uri anothertest.txt

Object located at: https://region-a.geo-1.objects.hpcloudsvc.com:443/v1/AUTH_ed097cde-cb84-4d72-b37e-a4be48c98d0

PS b1:\&gt;
</codeblock>
<p>Note : When you issue this command the URI is also pasted to the Windows clipboard for your convenience. If you want to disable this behavior simply set the CLI.config option entitled PasteGetURIResultsToClipboard to false.</p>
</section>
<section id="AddingandRemovingDrives"> <title>Adding and Removing Drives</title>
<p>There are times when you want to add or remove a drive from your list of available drives when it owned by another user.  To perform these actions, you can use the <codeph>new-container</codeph> and <codeph>remove-container</codeph> cmdlets.</p>
<p>To add a Container that someone else owns to your list of available drives:</p>
<codeblock>new-container -url https://objects.werr.net:443/v1/9153476658759/rgtest2</codeblock>
<p>This adds the container <codeph>rgtest2</codeph> to your list of available drives.  To remove the container from your list:</p>
<codeblock>remove-container rgtest2</codeblock>
</section>
<section id="GettingVersionInformation"> <title>Getting Version Information</title>
<p>It may be useful at times to know what version of the product you are using. Just issue the Get-Version command to get the main assembly location, product and CLR version.</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
------------------------------------------------------------------------------------------------------

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS demo:\&gt; get-version

Assembly Location   : C:\Projects\Outgoing\HP\HPCloud.Client.Powershell.fll
Product Version     : 1.0.0.0
CLR Version         : v4.0.30319
</codeblock>
</section>
<section id="UsingAnotherUsersCredentials"> <title>Using Another User's Credentials</title>
<p>If you want to use the credentials of a particular user for a session ("imitating" that user), you can use the command <codeph>set-credentials</codeph>.  The <codeph>set-credentials</codeph> command allows you to define the access key, secret key, and tenant key for a session:</p>
<codeblock>set-credentials -ak Access-Key -sk Secret-Key -t Tenant-ID</codeblock>
<p>Where you choose your desired values for <codeph>Access-Key</codeph>, <codeph>Secret-Key</codeph>, and <codeph>Tenant-ID</codeph>.</p>
</section>
<section id="ViewingtheReleaseNotes"> <title>Viewing the Release Notes</title>
<p>The <codeph>Get-Notes</codeph> command gives you the ability to view release notes for the current version (no arguments), a specific version (-v), or all past versions of the product (-all).</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
------------------------------------------------------------------------------------------------------

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS demo:\&gt; get-notes
------------------------------------------------------------------------------------------------------
Version : 1.0.0.0
Notes   :
     New Fixes

     * it worked
     * oieurd iphhrf oiuowio
     * iouioutrf t6r trtrerter

     New Features

     * eeeeehrfivuhewu
     * iuyquwehihi ioujiwirf oiuowio
     * iouioutrf t6r trtrerter

PS demo:\&gt; get-notes -v 1.0.0.4
------------------------------------------------------------------------------------------------------
Version : 1.0.0.4
Notes   :
     New Fixes

     * wqqqqqqqqqqqqqqqqqqqu
     * iuqqqqqqqqq iofghdirf oiwowio
     * ipuioutrf t6r  trsdfgddddddder

     New Features

     * wiodoiajagoedklaglk;ja
     * lkadafkdsj; ldkjflkiekkd ioiowkdlks
     * laoiab laltl lalkdljafdk

PS demo:\&gt; get-notes all
------------------------------------------------------------------------------------------------------
Version : 1.0.0.0
Notes   :
     New Fixes

     * it worked
     * oieurd iphhrf oiuowio
     * iouioutrf t6r trtrerter

     New Features

     * eeeeehrfivuhewu
     * iuyquwehihi ioujiwirf oiuowio
     * iouioutrf t6r trtrerter

------------------------------------------------------------------------------------------------------
Version : 1.0.0.4
Notes   :
     New Fixes

     * wqqqqqqqqqqqqqqqqqqqu
     * iuqqqqqqqqq iofghdirf oiwowio
     * ipuioutrf t6r  trsdfgddddddder

     New Features

     * wiodoiajagoedklaglk;ja
     * lkadafkdsj; ldkjflkiekkd ioiowkdlks
     * laoiab laltl lalkdljafdk

PS demo:\&gt; 
</codeblock>
</section>
<section id="MigratingYourFiles"> <title>Migrating Your Files From Another Storage System</title>
<p>The Migrate-Drive command gives you the ability to migrate your data from a non-HPE Helion Public Cloud storage system such as Amazon S3, Dropbox, or Microsoft Skydrive into the HPE Helion Public Cloud system easily and quickly.  This example uses Amazon S3 buckets.  To move the TLPRoot and TLPTest2 Buckets in S3 and the TLPTest2 Bucket contained MikeConfig.txt and NewHelp.text files to the HPE Helion Public Cloud system:</p>
<codeblock>
------------------------------------------------------------------------------------------------------
Welcome to the HP-Cloud Object Storage Powershell Environment.
------------------------------------------------------------------------------------------------------

  ==&gt; Registering Providers. . .
  ==&gt; Applying Command Aliases. . .
  ==&gt; Registering Views. . .

Ready. . .

PS testcon2:\&gt; migrate-drive "S3" -ak "SampleIn" -sk "SampleOut"

---------------------------------
Processing Bucket : TLPRoot
---------------------------------

Copying file 00322980.vmf
Copying file 00476382.jpg
Copying file 00489201.vmf
Copying file 00489311.png
Copying file 00574639.vmf
Copying file 00643531.vmf
Copying file 00736251.vmf
Copying file 00847362.vmf
Copying file NewDoc.xml

Files Copied : 9
Bytes Copied : 1007455

---------------------------------
Processing Bucket : TLPTest2
---------------------------------

Copying file MikeConfig.txt
Copying file NewHelp.txt

Files Copied : 2
Bytes Copied : 17545

---------------------------------
Operation Summary
---------------------------------

Total Files Copied : 11
Total Bytes Copied : 1025000

PS testcon2:\&gt;
</codeblock>
<p>The <codeph>-sk</codeph> option is your API secret key, and the <codeph>-ak</codeph> option is your access key.</p>
<p>For additional information on this command, see <xref href="http://h30499.www3.hp.com/t5/Grounded-in-the-Cloud/Migrating-your-files-with-the-Windows-CLI/ba-p/6470822#.U20mfFf7Ex5" type="section" scope="external" format="html" >Migrating your files with the Windows CLI</xref> blog post.</p>
</section>
</body>
</topic>