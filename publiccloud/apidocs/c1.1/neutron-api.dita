<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" ><topic xml:lang="en-us" id="topic127886">
<title>HPE Helion Public Cloud Networking API Specifications</title>
<prolog>
<metadata>
<othermeta name="layout" content="default"/>
</metadata>
</prolog>
<body>
<p>
<!--PUBLISHED-->
 <!--./content/api/c1.1/neutron-api.md-->
 <!--permalink: /publiccloud/api/networking/--></p>
<p>
<b>Date:</b> May 2014</p>
<p>
<b>Document Version:</b> 1.5</p>
<section id="1-overview"> <title>1. Overview</title>
<p>The HPE Helion Public Cloud Networking Service is based on <xref href="https://wiki.openstack.org/wiki/Neutron" scope="external" format="html" ><tm tmtype="reg">OpenStack</tm> Neutron</xref>.</p>
<p>HPE Helion Public Cloud Networking is a virtual network service that provides a powerful API to define the network connectivity and addressing used by devices from other services, such as HPE Helion Public Cloud Compute. The HPE Helion Public Cloud Networking API supports virtual network, subnet, router and port abstractions to describe network resources.</p>
<p>Users can configure rich network topologies by creating and configuring networks, subnets, ports and routers.  Other services such as Compute may be used to attach virtual devices to ports on these networks.  In particular, Networking supports each tenant having multiple private networks, and allows tenants to choose their own IP addressing scheme, even if those IP addresses overlap with those used by other tenants.  This enables advanced cloud networking use cases, such as building multi-tiered web applications and allowing applications to be migrated to the Cloud without changing IP addresses.</p>
<p>HPE Helion Public Cloud Networking API extensions provide additional abstractions and features. The Networking service supports the following extensions:</p>
<ul>
<li>Layer-3 Networking Extension

<ul>
<li>Floating IP</li>
<li>Router</li>
</ul>
</li>
<li>Quotas Extension</li>
<li>Security Groups</li>
</ul>
<p>HPE Helion Public Cloud Networking includes an API extension that provides abstract L3 routers that API users can dynamically provision and configure. These Networking routers can connect multiple L2 Networking networks, and can also provide a "gateway" that connects one or more private L2 networks to a shared "external" network (e.g., a public network for access to the Internet).</p>
<p>The L3 router support provides basic NAT capabilities on "gateway" ports that uplink the router to external networks. This router SNATs all traffic by default, and supports Floating IPs, which creates a static one-to-one mapping from a public IP on the external network to a private IP on one of the other subnets attached to the router. This allows a tenant to selectively expose VMs on private networks to other hosts on the external network (and often to all hosts on the Internet). Floating IPs can be allocated and then mapped from one HPE Helion Public Cloud Networking port to another, as needed.</p>
<p>Security Groups and Security Group Rules allow administrators and tenants the ability to specify the type of traffic and direction (ingress/egress) that is allowed to pass through a port.</p>
<p>We will be referring to HPE Helion Public Cloud Networking Service in this document as simply Networking or the Networking service.</p>
</section>
<section id="11-api-maturity-level"> <title>1.1 API Maturity Level</title>
<p>
<b>Maturity Level</b>:<!--A BR tag was used here in the original source.-->
Networking is currently in General Availability.</p>
<p>
<b>Version API Status</b>:<!--A BR tag was used here in the original source.-->
The Networking service is based upon OpenStack Neutron v2.0 API.</p>
</section>
<section id="12-document-revision-history"> <title>1.2 Document Revision History</title>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Document Version</entry>
  <entry align="left">Date</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">1.0</entry>
  <entry align="left">5/27/2013</entry>
  <entry align="left">Initial release</entry>
</row>
<row>
<entry align="left">1.1</entry>
  <entry align="left">1/27/2014</entry>
  <entry align="left">Fixed internal link</entry>
</row>
<row>
<entry align="left">1.2</entry>
  <entry align="left">4/3/2014</entry>
  <entry align="left">Changed instances of security_group to security-group. Updated XML and JSON code examples under  4.5.3.3  Create Port</entry>
</row>
<row>
<entry align="left">1.3</entry>
  <entry align="left">4/8/2014</entry>
  <entry align="left">Fixed JSON, XML, and Curl code examples under each section.  Updated Quota Limits fields.</entry>
</row>
<row>
<entry align="left">1.4</entry>
  <entry align="left">4/11/2014</entry>
  <entry align="left">Added API call for /quotas</entry>
</row>
<row>
<entry align="left">1.5</entry>
  <entry align="left">May 2014</entry>
  <entry align="left">HPE Helion updates</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="2-architecture-view"> <title>2. Architecture View</title>
</section>
<section id="21-overview"> <title>2.1 Overview</title>
<p>The Networking service provides virtual networking services among devices that are managed by the Compute service.</p>
<p>Key features of Networking include:</p>
<ul>
<li>As a tenant you own your own dedicated private network.  </li>
<li>As a tenant you own your IP space.</li>
<li>Ability to duplicate IP addresses across autonomous networks</li>
</ul>
</section>
<section id="211-high-level-task-flow"> <title>2.1.1 High-Level Task Flow</title>
<p>The high-level task flow for Networking is as follows:</p>
<ol>
<li>
<p>The tenant creates a router.<!--A BR tag was used here in the original source.-->
E.g., the tenant creates the <i>newrouter</i> router.</p>
</li>
<li>
<p>The tenant creates a network.<!--A BR tag was used here in the original source.-->
E.g., the tenant creates the <i>net1</i> network.</p>
</li>
<li>
<p>The tenant associates a subnet with that network.<!--A BR tag was used here in the original source.-->
E.g., the tenant associates the 10.0.0.0/24 subnet with the <i>net1</i> network.</p>
</li>
<li>
<p>The tenant adds an interface between the router and the subnet.</p>
</li>
<li>
<p>The tenant boots a virtual machine (VM) and specifies a single NIC that connects to the network.</p>

<p>Example A: Compute contacts Networking and creates the <i>port1</i> port on the <i>net1</i> network</p>

<p>$ nova boot --image image_name --nic net-id="id_of_net1" server_name</p>

<p>Example B:  Tenant creates a port prior to booting the VM</p>

<p>$ nova boot --image image_name --nic port-id="id_of_port1" server_name</p>
</li>
<li>
<p>Networking assigns an IP address to the <i>port1</i> port.<!--A BR tag was used here in the original source.--><b>Note:</b> Networking chooses the IP address by default.</p>
</li>
<li>
<p>The tenant deletes the VM.</p>

<ul>
<li>Compute contacts Networking and deletes the <i>port1</i> port.</li>
<li>The allocated IP address is returned to the pool of available IP addresses.</li>
</ul>
</li>
</ol>
</section>
<section id="22-conceptuallogical-architecture-view"> <title>2.2 Conceptual/Logical Architecture View</title>
</section>
<section id="221-core-apis"> <title>2.2.1 Core APIs</title>
<p>Networking API v2.0 manages the following entities:</p>
<ul>
<li>
<b>Network</b>: An isolated virtual layer-2 domain. A network can also be a virtual, or logical, switch.</li>
<li>
<b>Subnet</b>: An IP version 4 address block from which IP addresses that are assigned to VMs on a specified network are selected.</li>
<li>
<b>Port</b>: A virtual, or logical, switch port on a specified network.</li>
</ul>
<p>The above entities have auto-generated unique identifiers and support basic create, read, update, and delete (CRUD) functions with the POST, GET, PUT, and DELETE verbs.</p>
<p>CRUD Functionality:<!--A BR tag was used here in the original source.-->
C - Attribute can be used in <i>create</i> operations<!--A BR tag was used here in the original source.-->
R - Attribute is returned in response object for <i>show</i> and <i>list</i> operations<!--A BR tag was used here in the original source.-->
U - Attribute value can be updated<!--A BR tag was used here in the original source.-->
D - Attribute value can be deleted</p>
</section>
<section id="2211-network"> <title>2.2.1.1 Network</title>
<p>A network is an isolated virtual layer-2 broadcast domain that is typically reserved for the tenant who created it unless the network is configured to be shared. Tenants can create multiple networks until they reach the thresholds specified by per-tenant quotas.</p>
<p>In Networking, the network is the main entity. Ports and subnets are always associated with a network.</p>
</section>
<section id="2212-subnet"> <title>2.2.1.2 Subnet</title>
<p>A subnet represents an IP address block that can be used to assign IP addresses to virtual instances. Each subnet must have a CIDR and must be associated with a network. IPs can be either selected from the whole subnet CIDR or from allocation pools that can be specified by the user.</p>
<p>A subnet may optionally have a gateway, a list of DNS name servers, and host routes. This information is pushed to instances whose interfaces are associated with the subnet.</p>
</section>
<section id="2213-port"> <title>2.2.1.3 Port</title>
<p>A port represents a virtual switch port on a logical network switch. Virtual instances attach their interfaces into ports. The logical port also defines the MAC address and the IP address(es) to be assigned to the interfaces plugged into them.</p>
<p>When IP addresses are associated to a port, this implies the port is associated with a subnet, as the IP address was taken from the allocation pool for a specific subnet.</p>
</section>
<section id="222-api-extensions"> <title>2.2.2 API Extensions</title>
<p>In addition to the above core entities, Networking service manages the following entities through API extensions:</p>
<ul>
<li>
<b>Router</b>: Provides L3 forwarding and NAT capabilities.</li>
<li>
<b>Floating IP</b>: A public IP address that can be mapped to a private IP address via NAT.</li>
<li>
<b>Security Group</b>: A container for Security Group Rules. Associated with a port.</li>
<li>
<b>Security Group Rule</b>: Defines the type and direction of traffic that is allowed to pass through a port.</li>
</ul>
</section>
<section id="2221-router"> <title>2.2.2.1 Router</title>
<p>A router is used to interconnect subnets and forward traffic among them. Another feature of the router is to NAT internal traffic to external networks.</p>
<p>A router has an interface for each subnet it is associated with. By default the IP address of such interface is the subnets gateway IP. Also, whenever a router is associated with a subnet, a port for that router interface will be added to the subnet's network.</p>
<p>The <i>router:external</i> attribute is characterized as follows:</p>
<ul>
<li>Available in <b>Get</b> requests.</li>
<li>Of type Boolean (bool).  Default value is <i>false</i>
</li>
<li>Attribute is set by the cloud service provider</li>
</ul>
</section>
<section id="2222-floating-ip"> <title>2.2.2.2 Floating IP</title>
<p>A Floating IP is an IP address on an external network, which is associated with a specific port, and optionally a specific IP address, on a private network. A Floating IP allows access to an instance on a private network from an external network.</p>
<p>Floating IPs can only be defined on networks for which the attribute router:external has been set to True.</p>
</section>
<section id="2223-security-groups-and-rules"> <title>2.2.2.3 Security Groups and Rules</title>
<p>Security groups and security group rules allows administrators and tenants the ability to specify the type of traffic and direction (ingress/egress) that is allowed to pass through a port. A security group is a container for security group rules.</p>
<p>When a port is created in Networking it is associated with a security group. If a security group is not specified the port will be associated with a <i>default</i> security group. By default this group will drop all ingress traffic and allow all egress. Rules can be added to this group in order to change the behavior.</p>
</section>
<section id="23-entity-relationship-diagram"> <title>2.3 Entity Relationship Diagram</title>
<p>
  <image href="../../../media/networking_overview.jpg"/>
</p>
</section>
<section id="24-service-quotas"> <title>2.4 Service Quotas</title>
<p>Quotas are established for the following resources on a per-project basis. Quotas may be increased by contacting Public Cloud Support.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Quota</entry>
  <entry align="left">Value</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">Networks</entry>
  <entry align="left">5</entry>
  <entry align="left">Number of networks available.</entry>
</row>
<row>
<entry align="left">Subnets</entry>
  <entry align="left">5</entry>
  <entry align="left">Number of subnets available.</entry>
</row>
<row>
<entry align="left">Ports</entry>
  <entry align="left">70</entry>
  <entry align="left">Number of ports available.</entry>
</row>
<row>
<entry align="left">Floating IPs</entry>
  <entry align="left">45</entry>
  <entry align="left">Number of floating IP addresses available.</entry>
</row>
<row>
<entry align="left">Routers</entry>
  <entry align="left">1</entry>
  <entry align="left">Number of routers.</entry>
</row>
<row>
<entry align="left">Security Groups</entry>
  <entry align="left">10</entry>
  <entry align="left">Number of Security Groups allowed.</entry>
</row>
<row>
<entry align="left">Security Group Rules</entry>
  <entry align="left">50</entry>
  <entry align="left">Number of Security Group Rules allowed across all Security Groups.</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="25-rate-limits"> <title>2.5 Rate Limits</title>
<p>In order to ensure fair sharing of cloud resources, limits are placed on the rate at which an individual tenant can make requests to the Networking API servers. The rate limits are specified in terms of HTTP verbs (GET, PUT, POST, DELETE).</p>
<p>Should an operation be rate limited, an error is returned in the operation response.</p>
</section>
<section id="26-service-limitations"> <title>2.6 Service Limitations</title>
<p>The below functional limitations apply to the Networking service:</p>
<ul>
<li>Multicast/broadcast is not supported except for ARP and DHCP</li>
<li>IPv6 is currently not supported</li>
<li>Multi-NIC on a single instance is not supported</li>
</ul>
<p>Networking does not support all OpenStack Networking APIs and extensions as documented in the OpenStack Networking API Guide.  Operations not supported for customer use include:</p>
<ul>
<li>Bulk Create Networks  </li>
<li>Bulk Create Subnets  </li>
<li>Bulk Create Ports  </li>
<li>Provider Network Extensions  </li>
<li>Quota Extensions  </li>
<li>Security Groups: Update  </li>
<li>Security Group Rules: Update  </li>
</ul>
</section>
<section id="3-account-level-view"> <title>3. Account-level View</title>
</section>
<section id="31-accounts"> <title>3.1 Accounts</title>
<p>An account is created when a user first signs up with HPE Helion Public Cloud. A project (also known as a tenant) is created upon account activation. All calls to Networking APIs include the user's <i>tenant_id</i> as part of the call.</p>
<p>For additional details on accounts and tenants/projects, please refer to the Identity Service Overview.</p>
</section>
<section id="32-regions-and-availability-zones"> <title>3.2 Regions and Availability Zones</title>
<p>Networking provides the following service instance:</p>
<p>
<b>Region(s)</b>:<!--A BR tag was used here in the original source.-->
region-a.geo-1.network.hpcloudsvc.com<!--A BR tag was used here in the original source.-->
region-b.geo-1.network.hpcloudsvc.com</p>
</section>
<section id="33-service-catalog"> <title>3.3 Service Catalog</title>
<p>The service is exposed in the service catalog, as shown in the following fragment:</p>
<codeblock>
  <codeph>{
 "serviceCatalog": [
    {
      "name": "Networking",
      "type": "network",
      "endpoints": [{
        "tenantId": {tenant_id}
        "publicURL": "https://region-b.geo-1.network.hpcloudsvc.com",
        "publicURL2": "",
        "region": "region-b.geo-1",
        "versionId": "2.0",
        "versionInfo": "https://region-b.geo-1.network.hpcloudsvc.com",
        "versionList": "https://region-b.geo-1.network.hpcloudsvc.com"
      }]
    }
  ]
}
</codeph>
</codeblock>
</section>
<section id="4-rest-api-specifications"> <title>4. REST API Specifications</title>
<p>The Networking API is a ReSTful HTTP service that uses all aspects of the HTTP protocol including methods, URIs, media types and response codes.</p>
</section>
<section id="41-service-api-operations"> <title>4.1 Service API Operations</title>
<p>
<b>Hosts</b>:<!--A BR tag was used here in the original source.-->
https://region-a.geo-1.network.hpcloudsvc.com<!--A BR tag was used here in the original source.-->
https://region-b.geo-1.network.hpcloudsvc.com</p>
<p>
<b>BaseUri</b>: {Host}</p>
<p>
<b>Admin URI</b>: N/A</p>
<table>
<tgroup cols="5">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<thead>
<row>
<entry align="left">Resource</entry>
  <entry align="left">Operation</entry>
  <entry align="left">URI</entry>
  <entry align="left">Path</entry>
  <entry align="left">JSON/XML Support?</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">
<xref type="section" href="#topic127886/network_limits">
<b>Limits</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_limits">List Limits</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/quotas/{project_id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/network_api">
<b>Networks</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_network">Create Network</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/networks</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_network">Get Network</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/networks/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/update_network">Update Network</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/networks/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_network">Delete Network</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/networks/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_networks">List all Networks</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/networks</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/subnet_api">
<b>Subnets</b> </xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_subnet">Create Subnet</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/subnets</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_subnet">Get Subnet</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/subnets/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/update_subnet">Update Subnet</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/subnets/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_subnet">Delete Subnet</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/subnets/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_subnets">List all Subnets</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/subnets</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/port_api">
<b>Ports</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_port">Create Port</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/ports</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_port">Get Port</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/ports/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/update_port">Update Port</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/ports/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_port">Delete Port</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/ports/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_ports">List all Ports</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/ports/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/router_api">
<b>Routers</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_router">Create Router</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/routers</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_router">Get Router</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/routers/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/update_router">Update Router</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/routers</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_router">Delete Router</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/routers/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_routers">List all Routers</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/routers/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/add_interface">Create Router Interface</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/routers/{id}/add_router_interface</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_interface">Delete Router Interface</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/routers/{id}/remove_router_interface</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/floatingip_api">
<b>Floating IPs</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_fIP">Create Floating IP</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/floatingips</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_fIP">Get Floating IP</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/floatingips/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/update_fIP">Update Floating IP</xref>
</entry>
  <entry align="left">PUT</entry>
  <entry align="left">/floatingips/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_fIP">Delete Floating IP</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/floatingips/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_fIPs">List all Floating IP</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/floatingips</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/securitygroup_api">
<b>Security Groups</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_securityGroup">Create Security Group</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/security-groups</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/get_securityGroup">Get Security Group</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/security-groups/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_securityGroup">Delete Security Group</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/security-groups/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/list_securityGroup">List all Security Groups</xref>
</entry>
  <entry align="left">GET</entry>
  <entry align="left">/security-groups</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left">
<xref type="section" href="#topic127886/securitygrouprules_api">
<b>Security Group Rules</b>
</xref>
</entry>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/create_securityGroupRule">Create Security Group Rule</xref>
</entry>
  <entry align="left">POST</entry>
  <entry align="left">/security-group-rules</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
                <xref href="#topic127886/get_securityGroupRules" format="dita">Get Security Group Rule</xref>
              </entry>
  <entry align="left">GET</entry>
  <entry align="left">/security-group-rules/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
<xref type="section" href="#topic127886/delete_securityGroupRule">Delete Security Group Rule</xref>
</entry>
  <entry align="left">DELETE</entry>
  <entry align="left">/security-group-rules/{id}</entry>
  <entry align="left">Y/Y</entry>
</row>
<row>
<entry align="left"/>
  <entry align="left">
                <xref href="#topic127886/list_securityGroupRules" format="dita">List Security Group
                  Rules</xref>
              </entry>
  <entry align="left">GET</entry>
  <entry align="left">/security-group-rules</entry>
  <entry align="left">Y/Y</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
<section id="filtering"> <title>4.1.1 Filtering and Fields Selection</title>
<p>
<b>Fields Selection</b>
<!--A BR tag was used here in the original source.-->
If there are <i>fields</i> in request URL, v2.0 API will extract the list of fields to return.</p>
<p>Example:</p>
<codeblock>
  <codeph>https://region-a.geo-1.network.hpcloudsvc.com/v2.0/networks?fields=id&amp;amp;fields=name
</codeph>
</codeblock>
<p>
<b>Filtering by Value</b>
<!--A BR tag was used here in the original source.-->
Any other fields except the <i>fields</i> attribute may be used to filter resources. 
Example:</p>
<codeblock>
  <codeph>https://region-a.geo-1.network.hpcloudsvc.com/v2.0/networks?name=test1&amp;amp;name=test2. 
</codeph>
</codeblock>
</section>
<section id="42-common-request-headers"> <title>4.2 Common Request Headers</title>
<p>The Networking API supports both the JSON and XML data serialization formats. The request format is specified using the Content-Type header and is required for operations that have a request body.</p>
<p>Example Request - JSON:</p>
<codeblock>
  <codeph>POST /v2.0/networks 
Content-Type: application/json
Accept: application/json

{
    "network":
        {
            "name": "network-name",
            "admin_state_up": true
        }
}
</codeph>
</codeblock>
</section>
<section id="43-common-response-headers"> <title>4.3 Common Response Headers</title>
<p>The Networking API supports both the JSON and XML data serialization formats. The response format can be specified in requests using either the Accept header or adding an .xml or .json extension to the request URI. If no response format is specified, JSON is the default. If conflicting formats are specified using both an Accept header and a query extension, the query extension takes precedence.</p>
<p>It is possible for a response to be serialized using a format different from the request. If no response format is specified, JSON is the default. If conflicting formats are specified using both an Accept header and a query extension, the query extension takes precedence.</p>
<p>Example Response - JSON</p>
<codeblock>
  <codeph>HTTP/1.1 201 Created
Content-Type: application/json
Content-Length 204

{
    "network":
        {
            "status": "ACTIVE",
            "subnets": [],
            "name": "net-name",
            "admin_state_up": true,
            "tenant_id": "388a70781bae4ca895f17b7f6293eb70",
            "shared": false, "id": "2a4017ef-31ff-496a-9294-e96ecc3bc9c9"
        }
}
</codeph>
</codeblock>
</section>
<section id="http_codes"> <title>4.4 HTTP Error Responses</title>
<p>The v2.0 API returns an error response if a failure occurs while processing
a request. Networking uses only standard HTTP error codes. <codeph>4xx</codeph> errors typically indicate problems in the particular request being sent from the client.</p>
<ul>
<li>
<p>400 Bad Request. Malformed request URI or body, requested admin state invalid, invalid values entered, validation failed, method not allowed for request body (such as trying to update attributes that can be specified at create-time only)</p>
</li>
<li>
<p>401 Unauthorized. Invalid credentials provided</p>
</li>
<li>
<p>403 Forbidden.  User cannot access a specific resource or perform the requested operation</p>
</li>
<li>
<p>404 Not Found. Non existent URI, resource not found. Check for trailing slashes.</p>
</li>
<li>
<p>409 Conflict.  Port already configured on network, IP previously allocated on subnet, conflicting IP allocation pools for subnet.</p>
</li>
<li>
<p>500 Internal server error.  Internal Networking error.  Try operation again.</p>
</li>
<li>
<p>503 Service unavailable.  Failure in Mac address generation</p>
</li>
</ul>
</section>
<section id="45-service-api-operation-details"> <title>4.5 Service API Operation Details</title>
</section>
<section id="network_limits"> <title>4.5.1 Limits</title>
</section>
<section id="list_limits"> <title>4.5.1.1 List Limits</title>
</section>
<section id="get-v20quotasproject-id"> <title>GET /v2.0/quotas/{project_id}</title>
<p>This operation is used to list current quota limits for a project</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/quotas/{project_id}
Accept: application/json
Content-Type: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/quotas/{project_id}
Accept: application/xml
Content-Type: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    quota: 
        {
            subnet: 5
            network: 5
            floatingip: 45
            security_group_rule: 50
            security_group: 10
            router: 2
            port: 70
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;quota&gt;
    &lt;subnet quantum:type="int"&gt;5&lt;/subnet&gt;
    &lt;network quantum:type="int"&gt;5&lt;/network&gt;
    &lt;floatingip quantum:type="long"&gt;45&lt;/floatingip&gt;
    &lt;security_group_rule quantum:type="int"&gt;50&lt;/security_group_rule&gt;
    &lt;security_group quantum:type="int"&gt;10&lt;/security_group&gt;
    &lt;router quantum:type="long"&gt;2&lt;/router&gt;
    &lt;port quantum:type="int"&gt;70&lt;/port&gt;
&lt;/quota&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/quotas/{project_id}
</codeph>
</codeblock>
</section>
<section id="network_api"> <title>4.5.2 Networks</title>
<p>These operations are used to manage Network resources.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/networks</entry>
  <entry align="left">Lists a summary of all networks</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/networks/{id}</entry>
  <entry align="left">Lists detailed information for the specified network.</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">/v2.0/networks</entry>
  <entry align="left">Creates a new network.</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/networks/{id}</entry>
  <entry align="left">Updates the specified network.</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">/v2.0/networks/{id}</entry>
  <entry align="left">Destroys the specified network.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes available for network objects:</p>
<table>
<tgroup cols="6">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated id</entry>
  <entry align="left">UUID of the network.</entry>
</row>
<row>
<entry align="left">name</entry>
  <entry align="left">string</entry>
  <entry align="left">N</entry>
  <entry align="left">CRU</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Symbolic name for the network.  Name is not required to be unique.</entry>
</row>
<row>
<entry align="left">admin_state_up</entry>
  <entry align="left">bool</entry>
  <entry align="left">N</entry>
  <entry align="left">CRU</entry>
  <entry align="left">true</entry>
  <entry align="left">Administrative status of the network. If false (down), the network will not forward packets.</entry>
</row>
<row>
<entry align="left">status</entry>
  <entry align="left">string</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Indicates whether the network is currently operational. Possible values include: ACTIVE, DOWN, BUILD, ERROR</entry>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify a tenant identifier other than its own.</entry>
</row>
<row>
<entry align="left">subnets</entry>
  <entry align="left">list(uuid)</entry>
  <entry align="left">N</entry>
  <entry align="left">CRU</entry>
  <entry align="left">empty list</entry>
  <entry align="left">Subnets associated with this network.</entry>
</row>
<row>
<entry align="left">shared</entry>
  <entry align="left">bool</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">false</entry>
  <entry align="left">Specifies if this network should be shared across all tenants or not. Note that the default policy setting restricts usage of this attribute to administrative users only.</entry>
</row>
<row>
<entry align="left">port_security_enabled</entry>
  <entry align="left">bool</entry>
  <entry align="left">N</entry>
  <entry align="left">CRU</entry>
  <entry align="left">true</entry>
  <entry align="left">Specifies if new ports created on this network should have the port security extension enabled or disabled.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Unsupported API calls</b>
<!--A BR tag was used here in the original source.-->
Bulk Create Networks</p>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Default of five (5) networks per tenant.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_networks"> <title>4.5.2.1 List Networks</title>
</section>
<section id="get-v20networks"> <title>GET /v2.0/networks</title>
<p>This operation lists a summary of all networks defined in Networking that are accessible to the tenant who submits the request. Results provide the unique ID for each network.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/networks?name={name}
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/networks
Accept: application/json
Content-Type: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/networks
Accept: application/xml
Content-Type: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    networks: [1]
        0:  {
        status: "ACTIVE"
        subnets: [1]
            0:  "e12f0c45-46e3-446a-b207-9474b27687a6"
        name: "network_example"
        router:external: false
        tenant_id: "10979209027984"
        admin_state_up: true
        shared: false
        port_security_enabled: true
        id: "afc75773-640e-403c-9fff-62ba98db1f19"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;networks&gt;
    &lt;network&gt;
        &lt;status&gt;ACTIVE&lt;/status&gt;
        &lt;subnets&gt;
            &lt;subnet&gt;e12f0c45-46e3-446a-b207-9474b27687a6&lt;/subnet&gt;
        &lt;/subnets&gt;
        &lt;name&gt;network_example&lt;/name&gt;
        &lt;router:external quantum:type="bool"&gt;False&lt;/router:external&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
        &lt;shared quantum:type="bool"&gt;False&lt;/shared&gt;
        &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
        &lt;id&gt;afc75773-640e-403c-9fff-62ba98db1f19&lt;/id&gt;
    &lt;/network&gt;
&lt;/networks&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseUri}/v2.0/networks
</codeph>
</codeblock>
</section>
<section id="get_network"> <title>4.5.2.2 Show Network</title>
</section>
<section id="get-v20networksid"> <title>GET /v2.0/networks/{id}</title>
<p>This operation returns the status, subnets, name, tenant ID, admin state, shared status, port security status, and ID for the specified network ID.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/networks/{id}?name=foobar 
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/networks/{id}
Accept: application/json
Content-Type: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/networks/{id}
Accept: application/xml
Content-Type: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    network: {
        status: "ACTIVE"
        subnets: [1]
            0:  "e12f0c45-46e3-446a-b207-9474b27687a6"
        name: "network_example"
        router:external: false
        tenant_id: "10979209027984"
        admin_state_up: true
        shared: false
        port_security_enabled: true
        id: "afc75773-640e-403c-9fff-62ba98db1f19"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;network&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;subnets&gt;
        &lt;subnet&gt;e12f0c45-46e3-446a-b207-9474b27687a6&lt;/subnet&gt;
    &lt;/subnets&gt;
    &lt;name&gt;network_example&lt;/name&gt;
    &lt;router:external quantum:type="bool"&gt;False&lt;/router:external&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;shared quantum:type="bool"&gt;False&lt;/shared&gt;
    &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
    &lt;id&gt;afc75773-640e-403c-9fff-62ba98db1f19&lt;/id&gt;
&lt;/network&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseUri}/v2.0/networks/{id}
</codeph>
</codeblock>
</section>
<section id="create_network"> <title>4.5.2.3 Create Network</title>
</section>
<section id="post-v20networks"> <title>POST /v2.0/networks</title>
<p>This operation creates a new network using the specified symbolic name for the network.</p>
<p>To specify a <i>tenant_id</i> different from the authenticated tenant requires administrative privileges.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
A request body is not required.  If specified the body may optionally include one or more of the network attributes.</p>
<p>The <i>port_security_enabled</i> attribute is optional.  If not specified, the attribute will be created with the default value of True.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/networks
Accept: application/json
Content-Type: application/json

{
    "network":
        {
            "name": "sample_network",
            "admin_state_up": false
            "port_security_enabled": true
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/networks
Accept: application/xml
Content-Type: application/xml

&lt;network&gt;
    &lt;name&gt;sample_network&lt;/name&gt;
    &lt;admin_state_up&gt;true&lt;/admin_state_up&gt;
    &lt;port_security_enabled&gt;true&lt;/port_security_enabled&gt;
&lt;/network&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    network: 
        {
        status: "ACTIVE"
        subnets: [0]
        name: "network_example"
        router:external: false
        tenant_id: "10979209027984"
        admin_state_up: true
        shared: false
        port_security_enabled: true
        id: "4bc5fbb8-a6c4-43a1-88b3-3216d8892d57"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;network&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
        &lt;subnets quantum:type="list" /&gt;
    &lt;name&gt;sample_network&lt;/name&gt;
    &lt;router:external quantum:type="bool"&gt;False&lt;/router:external&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;admin_state_up quantum:type="bool"&gt;False&lt;/admin_state_up&gt;
    &lt;shared quantum:type="bool"&gt;False&lt;/shared&gt;
    &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
    &lt;id&gt;4bc5fbb8-a6c4-43a1-88b3-3216d8892d57&lt;/id&gt;
&lt;/network&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"network":{"name": "{name}", "admin_state_up": true, "port_security_enabled": true}}' {BaseURI}/v2.0/networks
</codeph>
</codeblock>
</section>
<section id="update_network"> <title>4.5.2.4 Update Network</title>
</section>
<section id="put-v20networksid"> <title>PUT /v2.0/networks/{id}</title>
<p>This operation updates the specified network object.</p>
<p>It is not allowed to update the <i>status</i>, <i>tenant_id</i>, or <i>id</i> attributes. Attempts to update these attributes will result in a 400 Bad Request error being returned.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body. The request body must contain a network object that specifies a symbolic name for the network.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/networks/{id} 
Content-Type: application/json
Accept: application/json

{
    "network":
        {
            "name": "updated_name"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>PUT /v2.0/networks/{id}
Content-Type: application/xml
Accept: application/xml

&lt;network&gt;
    &lt;name&gt;updated_name&lt;/name&gt;
&lt;/network&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    "network":
        {
        "status": "ACTIVE",
        "subnets": [],
        "name": "updated_name",
        "admin_state_up": false,
        "shared": false,
        "tenant_id": "c1210485b2424d48804aad5d39c61b8f",
        "id": "fc68ea2c-b60b-4b4f-bd82-94ec81110766"
        "port_security_enabled": true
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;network&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;subnets quantum:type="list" /&gt;
    &lt;name&gt;network_example&lt;/name&gt;
    &lt;router:external quantum:type="bool"&gt;False&lt;/router:external&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;admin_state_up quantum:type="bool"&gt;False&lt;/admin_state_up&gt;
    &lt;shared quantum:type="bool"&gt;False&lt;/shared&gt;
    &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
    &lt;id&gt;d97b0cc1-01bc-4349-8a9c-8388150104f0&lt;/id&gt;
&lt;/network&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"network":{"name": "{name}"}}' {BaseURI}/v2.0/networks/{id}
</codeph>
</codeblock>
</section>
<section id="delete_network"> <title>4.5.2.5 Delete Network</title>
</section>
<section id="delete-networksid"> <title>DELETE /networks/{id}</title>
<p>This operation deletes a network and its associated subnets provided that no port is currently configured on the network.</p>
<p>If ports are still configured on the network specified for deletion, a '409 Network In Use' error is returned.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/networks/{id} 
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/networks/{id}
Content-Type: application/XML
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content to return</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Network in Use</entry>
  <entry align="left">Unable to delete.  Network is in use.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/networks/{id}
</codeph>
</codeblock>
</section>
<section id="subnet_api"> <title>4.5.3 Subnets</title>
<p>Manage subnet resources.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/subnets</entry>
  <entry align="left">Lists all subnets that are accessible to the tenant who submits the request.</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/subnets/{id}</entry>
  <entry align="left">Lists detailed information for the specified subnet.</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">/v2.0/subnets</entry>
  <entry align="left">Creates a subnet on the specified network.</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/subnets/{id}</entry>
  <entry align="left">Updates the specified subnet.</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">/v2.0/subnets/{id}</entry>
  <entry align="left">Removes the specified subnet.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes for subnet objects:</p>
<table>
<tgroup cols="8">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<colspec colname="col8"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Description</entry>
  <entry align="left">Notes</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the subnet</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">network_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Network this subnet is associated with.</entry>
  <entry align="left"/>
  <entry align="left"/>
</row>
<row>
<entry align="left">name</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Human-readable name for the subnet. Might not be unique.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">ip_version</entry>
  <entry align="left">int</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">4</entry>
  <entry align="left">4</entry>
  <entry align="left">IP version</entry>
  <entry align="left">IPv6 is not supported</entry>
</row>
<row>
<entry align="left">CIDR</entry>
  <entry align="left">string</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">valid CIDR in the form <i>network_address/prefix</i>
</entry>
  <entry align="left">CIDR representing the IP range for this subnet.  Based on the IP version</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">gateway_ip</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">first address in CIDR</entry>
  <entry align="left">Valid IP address or null</entry>
  <entry align="left">Default gateway used by devices in this subnet.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">dns_nameservers</entry>
  <entry align="left">list(str)</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">Empty list</entry>
  <entry align="left">N/A</entry>
  <entry align="left">DNS name servers used by hosts in this subnet.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">allocation_pools</entry>
  <entry align="left">list(dict)</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">Every address in CIDR, excluding gateway_ip if configured</entry>
  <entry align="left">start/end of range must be valid IP</entry>
  <entry align="left">Sub-ranges of CIDR available for dynamic allocation to ports [ { "start": "10.0.0.2", "end": "10.0.0.254"} ]</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">host_routes</entry>
  <entry align="left">list(dict)</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">Empty List</entry>
  <entry align="left">[]</entry>
  <entry align="left">Routes that should be used by devices with IPs from this subnet (not including local subnet route).</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">enable_dhcp</entry>
  <entry align="left">bool</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">true</entry>
  <entry align="left">true, false</entry>
  <entry align="left">Specifies whether DHCP is enabled for this subnet or not.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify a tenant identifier other than its own.</entry>
  <entry align="left"/>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Unsupported API calls</b>
<!--A BR tag was used here in the original source.-->
Bulk Create Subnets</p>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Default of one (1) subnet per network</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_subnets"> <title>4.5.3.1 List Subnets</title>
</section>
<section id="get-v20subnets"> <title>GET /v2.0/subnets</title>
<p>This operation returns a list of subnet objects the tenant has access to. Default policy settings return exclusively subnets owned by the tenant submitting the request, unless the request is submitted by an user with administrative rights. You can control which attributes are returned by using the <i>fields</i> query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information.</p>
<p>This operation lists a summary of all subnets defined in your network that are accessible to the tenant who submits the request. The list provides the unique ID for each subnet.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/subnets?name={name}
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/subnets
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/subnets
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    subnets: [1]
        0:  {
        name: "subnet_example"
        enable_dhcp: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "10979209027984"
        dns_nameservers: [0]
            allocation_pools: [1]
            0:  {
            start: "10.0.0.2"
            end: "10.0.0.254"
            }
        host_routes: [0]
        ip_version: 4
        gateway_ip: "10.0.0.1"
        cidr: "10.0.0.0/24"
        id: "8a96392c-86cd-472b-bd05-0498303f088e"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;subnets&gt;
    &lt;subnet&gt;
        &lt;name&gt;subnet_example&lt;/name&gt;
        &lt;enable_dhcp quantum:type="bool"&gt;True&lt;/enable_dhcp&gt;
        &lt;network_id&gt;8ff719a1-914f-43a4-879a-b70ad23547ad&lt;/network_id&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;dns_nameservers quantum:type="list" /&gt;
            &lt;allocation_pools&gt;
                &lt;allocation_pool&gt;
                &lt;start&gt;10.0.0.2&lt;/start&gt;
                &lt;end&gt;10.0.0.254&lt;/end&gt;
                &lt;/allocation_pool&gt;
            &lt;/allocation_pools&gt;
        &lt;host_routes quantum:type="list" /&gt;
        &lt;ip_version quantum:type="long"&gt;4&lt;/ip_version&gt;
        &lt;gateway_ip&gt;10.0.0.1&lt;/gateway_ip&gt;
        &lt;cidr&gt;10.0.0.0/24&lt;/cidr&gt;
        &lt;id&gt;8a96392c-86cd-472b-bd05-0498303f088e&lt;/id&gt;
    &lt;/subnet&gt;
&lt;/subnets&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/subnets
</codeph>
</codeblock>
</section>
<section id="get_subnet"> <title>4.5.3.2 Show Subnet</title>
</section>
<section id="get-v20subnetsid"> <title>GET /v2.0/subnets/{id}</title>
<p>This operation returns data about the subnet specified in the request URI. You can control which attributes are returned by using the <i>fields</i> query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/subnets/{id}?name={name}
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/subnets/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/subnets/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    subnet: 
        {
        name: "subnet_example"
        enable_dhcp: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "10979209027984"
        dns_nameservers: [0]
        allocation_pools: [1]
            0:  {
            start: "10.0.0.2"
            end: "10.0.0.254"
            }
        host_routes: [0]
        ip_version: 4
        gateway_ip: "10.0.0.1"
        cidr: "10.0.0.0/24"
        id: "8a96392c-86cd-472b-bd05-0498303f088e"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;subnet&gt;
    &lt;name&gt;subnet_example&lt;/name&gt;
    &lt;enable_dhcp quantum:type="bool"&gt;True&lt;/enable_dhcp&gt;
    &lt;network_id&gt;8ff719a1-914f-43a4-879a-b70ad23547ad&lt;/network_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;dns_nameservers quantum:type="list" /&gt;
    &lt;allocation_pools&gt;
      &lt;allocation_pool&gt;
      &lt;start&gt;10.0.0.2&lt;/start&gt;
      &lt;end&gt;10.0.0.254&lt;/end&gt;
      &lt;/allocation_pool&gt;
    &lt;/allocation_pools&gt;
    &lt;host_routes quantum:type="list" /&gt;
    &lt;ip_version quantum:type="long"&gt;4&lt;/ip_version&gt;
    &lt;gateway_ip&gt;10.0.0.1&lt;/gateway_ip&gt;
    &lt;cidr&gt;10.0.0.0/24&lt;/cidr&gt;
    &lt;id&gt;8a96392c-86cd-472b-bd05-0498303f088e&lt;/id&gt;
&lt;/subnet&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">The allocation pool spans beyond the subnet CIDR</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/subnets{id}
</codeph>
</codeblock>
</section>
<section id="create_subnet"> <title>4.5.3.3 Create Subnet</title>
</section>
<section id="post-v20subnets"> <title>POST /v2.0/subnets</title>
<p>This operation creates a new subnet on the specified network. The <i>network_id</i> is required. You must also specify the <i>cidr</i> attribute for the subnet, in the form: <i>network_address/prefix</i>
</p>
<p>By default, Networking creates IPv4 subnets. Networking does not try to derive the correct IP version from the provided CIDR. If the parameter for the gateway address, <i>gateway_ip</i>, is not specified, an address from the CIDR for the gateway of the subnet, is allocated.</p>
<p>
<b>NOTE:</b> HPCS Networking does not support the use of IPv6, at this time.</p>
<p>To specify a subnet without a gateway, specify the value null for the <i>gateway_ip</i> attribute in the request body. If the <i>allocation_pools</i> attribute is not specified, Networking automatically allocates pools for covering all IP addresses in the CIDR, excluding the address reserved for the subnet gateway. Otherwise, you can explicitly specify allocation pools as shown in the following example.</p>
<p>When the attributes <i>allocation_pools</i> and <i>gateway_ip</i> are both specified, it is up to the user to ensure the gateway IP does not overlap with the specified allocation pools; otherwise a 409 Conflict error will be returned.</p>
<p>A subnet can only be added to a network that is owned by the same tenant. Attempting to add a subnet to another users network will result in a 403 error:  Tenant not allowed to create subnet on this network.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
Both the <i>network_id</i> and the <i>cidr</i> attributes are required.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
A request body is required.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/subnets
Content-Type: application/json
Accept: application/json

{
    "subnet": 
        {
            "network_id": "{id}",
            "name": "{name}",
            "ip_version": 4,
            "cidr": "10.0.0.0/24",
            "allocation_pools": 
                [{
                "start": "10.0.0.2", 
                "end": "10.0.0.254"
                }]
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/subnets
Content-Type: application/xml
Accept: application/xml

&lt;subnet&gt;
&lt;network_id&gt;{Network_ID}&lt;/network_id&gt;
&lt;name&gt;{Subnet_Name}&lt;/name&gt;
&lt;ip_version&gt;4&lt;/ip_version&gt;
&lt;cidr&gt;10.0.0.0/24&lt;/cidr&gt;
&lt;allocation_pools&gt;
 &lt;allocation_pool&gt;
     &lt;start&gt;10.0.0.2&lt;/start&gt;
     &lt;end&gt;10.0.0.254&lt;/end&gt;
 &lt;/allocation_pool&gt;
&lt;/allocation_pools&gt;
&lt;/subnet&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    subnet: 
        {
        name: "subnet_example"
        enable_dhcp: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "10979209027984"
        dns_nameservers: [0]
        allocation_pools: [1]
            0:  {
            start: "10.0.0.2"
            end: "10.0.0.254"
            }
        host_routes: [0]
        ip_version: 4
        gateway_ip: "10.0.0.1"
        cidr: "10.0.0.0/24"
        id: "fd3b0981-43d0-486c-b1cb-630c4778174a"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;subnet&gt;
&lt;name&gt;subnet_example&lt;/name&gt;
&lt;enable_dhcp quantum:type="bool"&gt;True&lt;/enable_dhcp&gt;
&lt;network_id&gt;8ff719a1-914f-43a4-879a-b70ad23547ad&lt;/network_id&gt;
&lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
&lt;dns_nameservers quantum:type="list" /&gt;
&lt;allocation_pools&gt;
    &lt;allocation_pool&gt;
    &lt;start&gt;10.0.0.2&lt;/start&gt;
    &lt;end&gt;10.0.0.254&lt;/end&gt;
    &lt;/allocation_pool&gt;
&lt;/allocation_pools&gt;
&lt;host_routes quantum:type="list" /&gt;
&lt;ip_version quantum:type="int"&gt;4&lt;/ip_version&gt;
&lt;gateway_ip&gt;10.0.0.1&lt;/gateway_ip&gt;
&lt;cidr&gt;10.0.0.0/24&lt;/cidr&gt;
&lt;id&gt;c2d51cea-a1eb-48eb-affc-dd929c5791f5&lt;/id&gt;
&lt;/subnet&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Duplicate Network present.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"subnet": {name: "{name}", "network_id": "{id}","ip_version": 4,"cidr": "10.0.0.0/24","allocation_pools": [{"start": "10.0.0.2", "end": "10.0.0.254"}]}}' {BaseURI}/v2.0/subnets
</codeph>
</codeblock>
</section>
<section id="update_subnet"> <title>4.5.3.4 Update Subnet</title>
</section>
<section id="put-v20subnetsid"> <title>PUT /v2.0/subnets/{id}</title>
<p>This operation updates the specified subnet.</p>
<p>Some attributes, such as IP version (ip_version), CIDR (cidr), and IP allocation pools (allocation_pools) cannot be updated. Attempting to update these attributes will result in a 400 - Bad Request error.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/subnets/{id}
Content-Type: application/json
Accept: application/json

{
    "subnet":
        {
        "gateway_ip": "{gateway_ip}",
        "name": "{name}"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>PUT /v2.0/subnets/{id}
Content-Type: application/xml
Accept: application/xml

&lt;subnet&gt;
  &lt;gateway_ip&gt;{gateway_ip}&lt;/gateway_ip&gt;
  &lt;name&gt;{name}2&lt;/name&gt;
&lt;/subnet&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    subnet: {
        name: "subnet_example2"
        enable_dhcp: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "10979209027984"
        dns_nameservers: [0]
            allocation_pools: [1]
                0:  {
                start: "10.0.0.2"
                end: "10.0.0.254"
                }
        host_routes: [0]
        ip_version: 4
        gateway_ip: "10.0.1.2"
        cidr: "10.0.0.0/24"
        id: "8a96392c-86cd-472b-bd05-0498303f088e"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;subnet&gt;
    &lt;name&gt;subnet_example2&lt;/name&gt;
    &lt;enable_dhcp quantum:type="bool"&gt;True&lt;/enable_dhcp&gt;
    &lt;network_id&gt;8ff719a1-914f-43a4-879a-b70ad23547ad&lt;/network_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;dns_nameservers quantum:type="list" /&gt;
    &lt;allocation_pools&gt;
        &lt;allocation_pool&gt;
        &lt;start&gt;10.0.0.2&lt;/start&gt;
        &lt;end&gt;10.0.0.254&lt;/end&gt;
        &lt;/allocation_pool&gt;
    &lt;/allocation_pools&gt;
    &lt;host_routes quantum:type="list" /&gt;
    &lt;ip_version quantum:type="long"&gt;4&lt;/ip_version&gt;
    &lt;gateway_ip&gt;10.0.1.2&lt;/gateway_ip&gt;
    &lt;cidr&gt;10.0.0.0/24&lt;/cidr&gt;
    &lt;id&gt;8a96392c-86cd-472b-bd05-0498303f088e&lt;/id&gt;
&lt;/subnet&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Disabled or suspended user making the request.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"subnet":{"gateway_ip": "{gateway_ip}","name":"{name}"}}' {BaseURI}/v2.0/subnets/{id}
</codeph>
</codeblock>
</section>
<section id="delete_subnet"> <title>4.5.3.5 Delete Subnet</title>
</section>
<section id="delete-v20subnetsid"> <title>DELETE /v2.0/subnets/{id}</title>
<p>This operation removes a subnet from the specified network. The operation fails if IP addresses from the subnet are still allocated.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/subnets/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/subnets/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content returned</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Unable to delete subnet.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/subnets/{id}
</codeph>
</codeblock>
</section>
<section id="port_api"> <title>4.5.4 Ports</title>
<p>Manage port resources.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/ports</entry>
  <entry align="left">Lists all ports</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/ports/{id}</entry>
  <entry align="left">Shows information for the specified port</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">/v2.0/ports</entry>
  <entry align="left">Creates a new port</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/ports/{id}</entry>
  <entry align="left">Updates the specified port</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">/v2.0/ports/{id}</entry>
  <entry align="left">Removes the specified port</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes for port objects:</p>
<table>
<tgroup cols="7">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the port.</entry>
</row>
<row>
<entry align="left">network_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Network this port is associated with.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">name</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Human-readable name for the port. Not required to be unique.</entry>
</row>
<row>
<entry align="left">admin_state_up</entry>
  <entry align="left">bool</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">true</entry>
  <entry align="left">true, false</entry>
  <entry align="left">Administrative state of the port. If false (down), port will not forward packets.</entry>
</row>
<row>
<entry align="left">status</entry>
  <entry align="left">string</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">N/A</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Indicates if network is currently operational. Possible values include:  ACTIVE, DOWN, BUILD, ERROR</entry>
</row>
<row>
<entry align="left">mac_address</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">generated</entry>
  <entry align="left">Valid MAC in 6-octet form separated by colons</entry>
  <entry align="left">MAC address to use on this port.</entry>
</row>
<row>
<entry align="left">fixed_ips</entry>
  <entry align="left">list(dict)</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">automatically allocated from pool</entry>
  <entry align="left">Valid IP address and existing subnet identifier</entry>
  <entry align="left">Specifies IP addresses for the port thus associating the port itself with the subnets where the IP addresses are picked from</entry>
</row>
<row>
<entry align="left">device_id</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">None</entry>
  <entry align="left">No constraint</entry>
  <entry align="left">Identifies the device (e.g., virtual server) using this port.</entry>
</row>
<row>
<entry align="left">device_owner</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">None</entry>
  <entry align="left">No constraint</entry>
  <entry align="left">Identifies the entity (e.g., dhcp agent) using this port.</entry>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">No constraint</entry>
  <entry align="left">Owner of network. Only admin users can specify a tenant_id other than their own.</entry>
</row>
<row>
<entry align="left">port_security_enabled</entry>
  <entry align="left">bool</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">same value as network</entry>
  <entry align="left"/>
  <entry align="left">If set to True, the rules of the default security group will be applied on the port.  If False, no security group rules will be applied.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Unsupported API calls</b>
<!--A BR tag was used here in the original source.-->
Bulk Create Ports</p>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Default of seventy (70) ports per tenant; one port per a VM.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_ports"> <title>4.5.4.1 List Ports</title>
</section>
<section id="get-v20ports"> <title>GET /v2.0/ports</title>
<p>This operation returns a list of ports to which the tenant has access. Default policy settings return only those ports that are owned by the tenant who submits the request. Users can control which attributes should be returned by using the fields query parameter.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity.</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/ports
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/ports
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    ports: [1]
        0:  {
        status: "ACTIVE"
        name: ""
        admin_state_up: true
        network_id: "138a44f8-6ea4-4f5d-8671-e7b73fcdea67"
        tenant_id: "10979209027984"
        device_owner: ""
        mac_address: "fa:16:3e:b4:32:bd"
        port_security_enabled: true
            fixed_ips: [1]
            0:  {
            subnet_id: "713d823a-c438-4472-90e9-eca238699553"
            ip_address: "10.0.0.4"
            }
        id: "05dce6b4-1bec-4055-a2f8-b4a3bab10ba3"
        security_groups: [1]
            0:  "94b2a4be-3d6e-4687-9ec3-a5c4abde1377"
        device_id: ""
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;ports&gt;
    &lt;port&gt;
        &lt;status&gt;ACTIVE&lt;/status&gt;
        &lt;name /&gt;
        &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
        &lt;network_id&gt;138a44f8-6ea4-4f5d-8671-e7b73fcdea67&lt;/network_id&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;device_owner /&gt;
        &lt;mac_address&gt;fa:16:3e:b4:32:bd&lt;/mac_address&gt;
        &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
        &lt;fixed_ips&gt;
            &lt;fixed_ip&gt;
            &lt;subnet_id&gt;713d823a-c438-4472-90e9-eca238699553&lt;/subnet_id&gt;
            &lt;ip_address&gt;10.0.0.4&lt;/ip_address&gt;
            &lt;/fixed_ip&gt;
        &lt;/fixed_ips&gt;
        &lt;id&gt;05dce6b4-1bec-4055-a2f8-b4a3bab10ba3&lt;/id&gt;
        &lt;security_groups&gt;
            &lt;security_group&gt;94b2a4be-3d6e-4687-9ec3-a5c4abde1377&lt;/security_group&gt;
        &lt;/security_groups&gt;
        &lt;device_id /&gt;
    &lt;/port&gt;
&lt;/ports&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/ports
</codeph>
</codeblock>
</section>
<section id="get_port"> <title>4.5.4.2 Show Port</title>
</section>
<section id="get-v20portsid"> <title>GET /v2.0/ports/{id}</title>
<p>This operation returns information for the port specified in the request URI.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/ports/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/ports/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    port: 
        {
        status: "ACTIVE"
        name: ""
        admin_state_up: true
        network_id: "138a44f8-6ea4-4f5d-8671-e7b73fcdea67"
        tenant_id: "10979209027984"
        device_owner: ""
        mac_address: "fa:16:3e:b4:32:bd"
        port_security_enabled: true
        fixed_ips: [1]
            0:  {
            subnet_id: "713d823a-c438-4472-90e9-eca238699553"
            ip_address: "10.0.0.4"
            }
        id: "05dce6b4-1bec-4055-a2f8-b4a3bab10ba3"
        security_groups: [1]
            0:  "94b2a4be-3d6e-4687-9ec3-a5c4abde1377"
        device_id: ""
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;port&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;name /&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;network_id&gt;138a44f8-6ea4-4f5d-8671-e7b73fcdea67&lt;/network_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;device_owner /&gt;
    &lt;mac_address&gt;fa:16:3e:b4:32:bd&lt;/mac_address&gt;
    &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
    &lt;fixed_ips&gt;
        &lt;fixed_ip&gt;
        &lt;subnet_id&gt;713d823a-c438-4472-90e9-eca238699553&lt;/subnet_id&gt;
        &lt;ip_address&gt;10.0.0.4&lt;/ip_address&gt;
        &lt;/fixed_ip&gt;
    &lt;/fixed_ips&gt;
    &lt;id&gt;05dce6b4-1bec-4055-a2f8-b4a3bab10ba3&lt;/id&gt;
    &lt;security_groups&gt;
    &lt;security_group&gt;94b2a4be-3d6e-4687-9ec3-a5c4abde1377&lt;/security_group&gt;
    &lt;/security_groups&gt;
    &lt;device_id /&gt;
&lt;/port&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
If an error occurs or the port is not found, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/ports/{id}
</codeph>
</codeblock>
</section>
<section id="create_port"> <title>4.5.4.3 Create Port</title>
</section>
<section id="post-v20ports"> <title>POST /v2.0/ports</title>
<p>This operation creates a new port. The network where the port is created must be specified in the <i>network_id</i> attribute in the request body. You can also specify the following optional attributes:</p>
<ul>
<li>A symbolic name for the port</li>
<li>MAC address. If an invalid address is specified a 400 Bad Request error will be returned, whereas a 409 Conflict error will be returned if the specified MAC address is already in use.

<ul>
<li>If the MAC address is not specified, Networking will try to allocate one for the port being created. If there is a failure while generating the address, a 503 Service Unavailable error will be returned.</li>
</ul>
</li>
<li>Administrative state. Set to true for up, and false for down.</li>
<li>Fixed IPs

<ul>
<li>If you specify just a subnet ID, Networking allocates an available IP from that subnet to the port.</li>
<li>If you specify both a subnet ID and an IP address, Networking tries to allocate the specified address to the port.</li>
<li>Host routes for the port, in addition to the host routes defined for the subnets that the port is associated with.</li>
</ul>
</li>
</ul>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
The <i>network_id</i> must be specified in the request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>The <i>port_security_enabled</i> attribute is optional.  If not specified, the attribute will have the same value as the network object value.</p>
<!--
Also optional are the *device_id* and the *security_groups* attributes. -->
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/ports
Content-Type: application/json
Accept: application/json

{
    "port": 
        {
        "admin_state_up": "true", 
        "name": "{name}", 
        "network_id": "{id}"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/ports
Content-Type: application/xml
Accept: application/xml

&lt;port&gt;
    &lt;admin_state_up&gt;true&lt;/admin_state_up&gt;
    &lt;name&gt;{name}&lt;/name&gt;
    &lt;network_id&gt;{id}&lt;/network_id&gt;
&lt;/port&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    port: 
        {
        status: "ACTIVE"
        name: "port_example"
        admin_state_up: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "10979209027984"
        device_owner: ""
        mac_address: "fa:16:3e:d0:f8:8a"
        port_security_enabled: true
        fixed_ips: [1]
            0:  {
            subnet_id: "8a96392c-86cd-472b-bd05-0498303f088e"
            ip_address: "10.0.0.2"
            }
        id: "ea41aae0-29a7-448e-923f-8644deb27041"
        security_groups: [1]
            0:  "94b2a4be-3d6e-4687-9ec3-a5c4abde1377"
        device_id: ""
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;port&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;name&gt;port_example&lt;/name&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;network_id&gt;8ff719a1-914f-43a4-879a-b70ad23547ad&lt;/network_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;device_owner /&gt;
    &lt;mac_address&gt;fa:16:3e:f7:ca:f9&lt;/mac_address&gt;
    &lt;port_security_enabled quantum:type="bool"&gt;True&lt;/port_security_enabled&gt;
    &lt;fixed_ips&gt;
        &lt;fixed_ip&gt;
        &lt;subnet_id&gt;8a96392c-86cd-472b-bd05-0498303f088e&lt;/subnet_id&gt;
        &lt;ip_address&gt;10.0.0.2&lt;/ip_address&gt;
        &lt;/fixed_ip&gt;
    &lt;/fixed_ips&gt;
    &lt;id&gt;16a7ec70-0687-48b9-9339-268859bbe931&lt;/id&gt;
    &lt;security_groups&gt;
        &lt;security_group&gt;94b2a4be-3d6e-4687-9ec3-a5c4abde1377&lt;/security_group&gt;
    &lt;/security_groups&gt;
    &lt;device_id /&gt;
&lt;/port&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Disabled or suspended user making the request.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Duplicate Port present.</entry>
</row>
<row>
<entry align="left">503</entry>
  <entry align="left">MAC Generation Failure</entry>
  <entry align="left">Unable to generate MAC address.  Service unavailable</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"port": {"admin_state_up": true, "name": "{name}", "network_id": "{id}", "port_security_enabled": true}}' {BaseURI}/v2.0/ports
</codeph>
</codeblock>
</section>
<section id="update_port"> <title>4.5.4.4 Update Port</title>
</section>
<section id="put-v20portsid"> <title>PUT /v2.0/ports/{id}</title>
<p>This operation updates the information for a port, such as its symbolic name and associated IPs. When you update IPs for a port, the previously associated IPs are removed, returned to their respective subnets allocation pools, and replaced by the IPs specified in the body for the update request.</p>
<p>This operation replaces the <i>fixed_ip</i> attribute when it is specified, in the request body. If the new IP addresses are not valid (i.e., they are already in use) the operation fails and the existing IP addresses are not removed from the port.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/ports/{id}
Content-Type: application/json
Accept: application/json

{
    "port":
        {
        "admin_state_up":"true",
        "name":"{name}",
        "fixed_ips":
            [{
            "ip_address": "{fixed_ip}",
            "subnet_id": "{id}"
            }]
        }
}
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    port: 
        {
        status: "ACTIVE"
        name: "port_test"
        admin_state_up: true
        network_id: "8ff719a1-914f-43a4-879a-b70ad23547ad"
        tenant_id: "65589599430509"
        device_owner: ""
        mac_address: "fa:16:3e:d0:f8:8a"
        fixed_ips: [1]
            0:  {
            subnet_id: "8a96392c-86cd-472b-bd05-0498303f088e"
            ip_address: "10.0.0.8"
            }
        id: "ea41aae0-29a7-448e-923f-8644deb27041"
        security_groups: [1]
            0:  "94b2a4be-3d6e-4687-9ec3-a5c4abde1377"
        device_id: ""
        }
}
</codeph>
</codeblock>
<p>
<b>Error Response</b> 
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Disabled or suspended user making the request.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Unable to update port.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"port": {"admin_state_up":"true", "name":"{name}", "fixed_ips":[ {"ip_address": "{fixed_ip}", "subnet_id": "{id}"}]}}' {BaseURI}/v2.0/ports/{id}
</codeph>
</codeblock>
</section>
<section id="delete_port"> <title>4.5.4.5 Delete Port</title>
</section>
<section id="delete-v20portsid"> <title>DELETE /v2.0/ports/{id}</title>
<p>This operation removes a port from the network. If IP addresses are associated with the port, they are returned to their respective subnets allocation pools.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/ports/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/ports/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content returned</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Disabled or suspended user making the request.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/ports/{id}
</codeph>
</codeblock>
</section>
<section id="extension_api"> <title>4.5.5 Layer-3 Networking Extensions</title>
</section>
<section id="router_api"> <title>4.5.5.1 Router Operations</title>
<p>Manage routers through the Networking L3 API extension.</p>
<p>A router is used to interconnect subnets and forward traffic among them. Another feature of the router is to NAT internal traffic to external networks.</p>
<p>A router has an interface for each subnet it is associated with. By default the IP address of such interface is the subnet's gateway IP. Also, whenever a router is associated with a subnet, a port for that router interface will be added to the subnet's network.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/routers</entry>
  <entry align="left">List of logical routers to which the tenant has access</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/routers/{id}</entry>
  <entry align="left">Show details of the specified logical router</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">/v2.0/routers</entry>
  <entry align="left">Create a new logical router</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/routers/{id}</entry>
  <entry align="left">Update the specified logical router</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">/v2.0/routers/{id}</entry>
  <entry align="left">Removes the specified logical router and its external gateway interface, if it exists</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/routers/{id}/add_router_interface</entry>
  <entry align="left">Add a new internal interface to the specified logical router</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/routers/{id}/remove_router_interface</entry>
  <entry align="left">Remove the internal interface to the specified logical router</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes for router objects:</p>
<table>
<tgroup cols="7">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the router.</entry>
</row>
<row>
<entry align="left">name</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Human readable name for the router. Name is not required to be unique.</entry>
</row>
<row>
<entry align="left">admin_state_up</entry>
  <entry align="left">bool</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">true</entry>
  <entry align="left">true, false</entry>
  <entry align="left">Administrative state of the router.</entry>
</row>
<row>
<entry align="left">status</entry>
  <entry align="left">string</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">N/A</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Indicates whether a router is currently operational or not.</entry>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">Derived from Authentication token</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify an identifier other than their own.</entry>
</row>
<row>
<entry align="left">external_gateway_info</entry>
  <entry align="left">dict</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">No constraints</entry>
  <entry align="left">Information on external gateway for the router.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Quota limit of one (1) router per tenant.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_routers"> <title>4.5.5.1.1 List Routers</title>
</section>
<section id="get-v20routers"> <title>GET /v2.0/routers</title>
<p>This operation returns a list of routers to which the tenant has access. Default policy settings return only those routers that are owned by the tenant who submits the request.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter.  See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information.  Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/routers?admin_state_up=false 
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/routers
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/routers
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    routers: [1]
        0:  {
        status: "ACTIVE"
        external_gateway_info: {
        network_id: "7da74520-9d5e-427b-a508-213c84e69616"
        enable_snat: true
        }
    name: "default_router"
    admin_state_up: true
    tenant_id: "10979209027984"
    id: "797568e9-15e1-4b0a-b4a6-4181a8659897"
    }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;routers&gt;
    &lt;router&gt;
        &lt;status&gt;ACTIVE&lt;/status&gt;
        &lt;external_gateway_info&gt;
        &lt;network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/network_id&gt;
        &lt;enable_snat quantum:type="bool"&gt;True&lt;/enable_snat&gt;
        &lt;/external_gateway_info&gt;
    &lt;name&gt;default_router&lt;/name&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/id&gt;
    &lt;/router&gt;
&lt;/routers&gt;    
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/routers
</codeph>
</codeblock>
</section>
<section id="get_router"> <title>4.5.5.1.2 Show Router</title>
</section>
<section id="get-v20routersid"> <title>GET /v2.0/routers/{id}</title>
<p>This operation returns the details for a specific router whose identifier is specified on the request URI.</p>
<p>
<b>Request Data</b> 
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/routers/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/routers/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    router: 
        {
        status: "ACTIVE"
        external_gateway_info: {
        network_id: "7da74520-9d5e-427b-a508-213c84e69616"
        enable_snat: true
        }
    name: "default_router"
    admin_state_up: true
    tenant_id: "10979209027984"
    id: "797568e9-15e1-4b0a-b4a6-4181a8659897"
    }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;router&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;external_gateway_info&gt;
    &lt;network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/network_id&gt;
    &lt;enable_snat quantum:type="bool"&gt;True&lt;/enable_snat&gt;
    &lt;/external_gateway_info&gt;
    &lt;name&gt;default_router&lt;/name&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/id&gt;
&lt;/router&gt;    
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/routers/{id}
</codeph>
</codeblock>
</section>
<section id="create_router"> <title>4.5.5.1.3 Create Router</title>
</section>
<section id="post-v20routers"> <title>POST /v2.0/routers</title>
<p>This operation creates a new logical router. When it is created, a logical router does not have any internal interface. In other words, it is not associated to any subnet. The user can optionally specify an external gateway for a router at create time; a router's external gateway must be plugged into an external network, that is to say a network for which the extended field <i>router:external</i> is set to <i>true</i>.</p>
<p>In order to specify an external gateway, the identifier of the external network must be passed in the request body's <i>external_gateway_info</i> attribute. This can be achieved as shown in the following snippet:</p>
<codeblock>
  <codeph>"external_gateway_info" :
    {"network_id": "{id}"}
</codeph>
</codeblock>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/routers
Content-Type: application/json
Accept: application/json

{
    "router":
        {
        "name": "{name}",
        "admin_state_up": true,
        "external_gateway_info" :
            {
            "network_id": "{id}"
            }
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/routers
Content-Type: application/xml
Accept: application/xml

&lt;router&gt;
  &lt;name&gt;{Router_Name}&lt;/name&gt;
  &lt;admin_state_up&gt;true&lt;/admin_state_up&gt;
  &lt;external_gateway_info&gt;
      &lt;network_id&gt;{id}&lt;/network_id&gt;
  &lt;/external_gateway_info&gt;
&lt;/router&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    router: 
        {
        status: "ACTIVE"
        external_gateway_info: 
            {
            network_id: "7da74520-9d5e-427b-a508-213c84e69616"
            enable_snat: true
            }
        name: "new_router"
        admin_state_up: true
        tenant_id: "10979209027984"
        id: "65de76c1-10df-47e9-88d9-bfe638a73441"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;router&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;external_gateway_info&gt;
    &lt;network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/network_id&gt;
    &lt;enable_snat quantum:type="bool"&gt;True&lt;/enable_snat&gt;
    &lt;/external_gateway_info&gt;
    &lt;name&gt;new_router&lt;/name&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;id&gt;1e5057bf-6afa-471f-9bc0-fd0a88a52105&lt;/id&gt;
&lt;/router&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Duplicate Router present or Quota exceeded.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"router": {"name": "{name}","admin_state_up":"true","external_gateway_info":{"network_id":"{id}"}}}' {BaseURI}/v2.0/routers
</codeph>
</codeblock>
</section>
<section id="update_router"> <title>4.5.5.1.4 Update Router</title>
</section>
<section id="put-v20routersid"> <title>PUT /v2.0/routers/{id}</title>
<p>This operation updates a logical router. Beyond the name and the administrative state, the only parameter which can be updated with this operation is the external gateway. For more information concerning how to set the external gateway for a router, please refer to the previous section (Create Router) or to the following example.</p>
<p>This operation does not allow updating the router interfaces.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}
Content-Type: application/json
Accept: application/json

{
    "router":
        {
            "external_gateway_info":
                {
                "network_id": "{id}"
                },
            "name":"{name}",
            "admin_state_up":"true"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}
Content-Type: application/xml
Accept: application/xml

&lt;router&gt;
&lt;external_gateway_info&gt;
    &lt;network_id&gt;{id}&lt;/network_id&gt;
&lt;/external_gateway_info&gt;
&lt;name&gt;{name}&lt;/name&gt;
&lt;admin_state_up&gt;true&lt;/admin_state_up&gt;
&lt;/router&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    router: 
        {
        status: "ACTIVE"
        external_gateway_info: 
            {
            network_id: "7da74520-9d5e-427b-a508-213c84e69616"
            enable_snat: true
            }
        name: "router_newname"
        admin_state_up: true
        tenant_id: "10979209027984"
        id: "797568e9-15e1-4b0a-b4a6-4181a8659897"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;router&gt;
    &lt;status&gt;ACTIVE&lt;/status&gt;
    &lt;external_gateway_info&gt;
    &lt;network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/network_id&gt;
    &lt;enable_snat quantum:type="bool"&gt;True&lt;/enable_snat&gt;
    &lt;/external_gateway_info&gt;
    &lt;name&gt;router_newname&lt;/name&gt;
    &lt;admin_state_up quantum:type="bool"&gt;True&lt;/admin_state_up&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/id&gt;
&lt;/router&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Unable to update router.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"router": {"name": "{name}","admin_state_up":true,"external_gateway_info":{"network_id":"{id}"}}}' {BaseURI}/v2.0/routers/{id}
</codeph>
</codeblock>
</section>
<section id="delete_router"> <title>4.5.5.1.5 Delete Router</title>
</section>
<section id="put-v20routersid2"> <title>PUT /v2.0/routers/{id}</title>
<p>This operation removes a logical router. The operation will fail if the router still has internal interfaces attached.</p>
<p>
<b>Note:</b>  All router interfaces must be removed prior to deleting the router.  Router interfaces can be removed through the <xref type="section" href="#topic127886/delete_interface">Remove router interface</xref>
</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/routers/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/routers/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content returned</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Unable to delete router due to a conflict.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/routers/{id}
</codeph>
</codeblock>
</section>
<section id="add_interface"> <title>4.5.5.1.6 Add Router Interface</title>
</section>
<section id="put-v20routersidadd-router-interface"> <title>PUT /v2.0/routers/{id}/add_router_interface</title>
<p>This operation attaches a subnet to an internal router interface. Either a subnet identifier or a port identifier must be passed in the request body. If both are specified, a 400 Bad Request error is returned.</p>
<p>If the <i>subnet_id</i> attribute is specified in the request body, the subnets gateway IP address is used to create the router interface; otherwise, if the <i>port_id</i> is specified, the IP address associated with the port is used for creating the router interface.</p>
<p>
<b>NOTE:</b>  A 400 Bad Request error is returned if several IP addresses are associated with the specified port, or if no IP address is associated with the port.  A 409 Conflict is returned if the port is already in use.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}/add_router_interface
Content-Type: application/json
Accept: application/json

{
    "subnet_id": "{id}"
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}/add_router_interface
Content-Type: application/xml
Accept: application/xml

&lt;subnet_id&gt;{id}&lt;/subnet_id&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
The port identifier returned by this operation can either be the same identifier passed in the request body or the identifier of a new port created by this operation to attach the subnet specified by subnet_id to the router.</p>
<p>After executing this operation, the device_id attribute of this port is set to the router's identifier, and the device_owner attribute is set to network:router_interface.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    subnet_id: "8a96392c-86cd-472b-bd05-0498303f088e"
    tenant_id: "10979209027984"
    port_id: "11aa37b3-3e40-45b3-b869-ddfe209ff186"
    id: "797568e9-15e1-4b0a-b4a6-4181a8659897"
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;_v_root&gt;
    &lt;subnet_id&gt;8a96392c-86cd-472b-bd05-0498303f088e&lt;/subnet_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_id&gt;eefa960e-2761-4643-bc23-da2becb2d983&lt;/port_id&gt;
    &lt;id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/id&gt;
&lt;/_v_root&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs or attempting to add an interface to a non existing router, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Port already in use</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"subnet_id": "{id}"}' {BaseURI}/v2.0/routers/{id}/add_router_interface
</codeph>
</codeblock>
</section>
<section id="delete_interface"> <title>4.5.5.1.7 Remove Router Interface</title>
</section>
<section id="put-v20routersidremove-router-interface"> <title>PUT /v2.0/routers/{id}/remove_router_interface</title>
<p>This operation removes an internal router interface, thus detaching a subnet from the router. Either a subnet identifier (subnet_id) or a port identifier (port_id) should be passed in the request body; this will be used to identify the router interface to remove. If both are specified, the subnet identifier must correspond to the first IP address on the port specified by the port identifier. Otherwise, a 409 Conflict error will be returned.</p>
<p>A 404 Not Found error will be returned if either the router or the subnet/port does not exist or are not visible to the user.</p>
<p>This operation will cause the port connecting the router to the subnet to be removed from the subnets network.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}/remove_router_interface
Content-Type: application/json
Accept: application/json

{
    "subnet_id": "{id}"
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>PUT /v2.0/routers/{id}/remove_router_interface
Content-Type: application/xml
Accept: application/xml

&lt;subnet_id&gt;{id}&lt;subnet_id&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This request does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Unable to find request.   Router or the subnet/port do not exist or are not visible to the requester</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">subnet identifier must correspond to the first IP address on the port specified by the port identifier</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"subnet_id": "{id}"}' {BaseURI}/v2.0/routers/{id}/remove_router_interface
</codeph>
</codeblock>
</section>
<section id="floatingip_api"> <title>4.5.5.2 Floating IP Operations</title>
<p>Manage floating IPs through the Networking L3 API extension.</p>
<p>
<b>NOTE:</b> Floating IPs can only be defined on networks for which the attribute <i>router:external</i> has been set to True.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/floatingips</entry>
  <entry align="left">List of Floating IPs accessible to the tenant submitting the request</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">/v2.0/floatingips/{id}</entry>
  <entry align="left">Show details about the specified Floating IP</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">/v2.0/floatingips</entry>
  <entry align="left">Create a new floating IP</entry>
</row>
<row>
<entry align="left">PUT</entry>
  <entry align="left">/v2.0/floatingips/{id}</entry>
  <entry align="left">Update a Floating IP</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">/v2.0/floatingips/{id}</entry>
  <entry align="left">Delete a Floating IP</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes for Floating IP objects:</p>
<table>
<tgroup cols="8">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<colspec colname="col8"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Constraints</entry>
  <entry align="left">Notes</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the Floating IP instance</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">router_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID Pattern</entry>
  <entry align="left">UUID of the router where the Floating IP will be created.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">floating_network_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID Pattern</entry>
  <entry align="left">UUID of the external network where the Floating IP will be created.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">port_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Yes</entry>
  <entry align="left">CRU</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID Pattern</entry>
  <entry align="left">UUID of the port on an internal network which should be associated to the Floating IP.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">fixed_ip_address</entry>
  <entry align="left">IP Address</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">IP address or null</entry>
  <entry align="left">Specific IP address on the port_id which should be associated with the Floating IP.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">floating_ip_address</entry>
  <entry align="left">IP Address</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">Automatically allocated from pool</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Address of the Floating IP on the external network.</entry>
  <entry align="left"/>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">Derived from Authentication token</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify an identifier other than their own.</entry>
  <entry align="left"/>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Default of forty-five (45) floating IPs per a tenant.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_fIPs"> <title>4.5.5.2.1 List Floating IPs</title>
</section>
<section id="get-v20floatingips"> <title>GET /v2.0/floatingips</title>
<p>The operation returns a list of Floating IPs to which the tenant has access. Default policy settings return only those Floating IPs that are owned by the tenant who submits the request, unless the request is submitted by an user with administrative rights.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the <i>fields</i> query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information.  Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/floatingips?router_id="{id}"
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/floatingips
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/floatingips
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    "floatingips":
        [
            {
            "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
            "tenant_id": "10979209027984",
            "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
            "fixed_ip_address": "10.0.0.3",
            "floating_ip_address": "15.126.241.42",
            "port_id": "ce705c24-c1ef-408a-bda3-7bbd946164ab",
            "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7"
            },
            {
            "router_id": null,
            "tenant_id": "10979209027984",
            "floating_network_id": "376da547-b977-4cfe-9cba-275c80debf57",
            "fixed_ip_address": null,
            "floating_ip_address": "15.126.241.43",
            "port_id": null,
            "id": "61cea855-49cb-4846-997d-801b70c71bdd"
            }
        ]
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;floatingips&gt;
    &lt;floatingip&gt;
    &lt;router_id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/router_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;floating_network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/floating_network_id&gt;
    &lt;fixed_ip_address&gt;10.0.0.3&lt;/fixed_ip_address&gt;
    &lt;floating_ip_address&gt;15.126.241.43&lt;/floating_ip_address&gt;
    &lt;port_id&gt;da92aabc-a633-4773-b410-a5fe75245c51&lt;/port_id&gt;
    &lt;id&gt;01b17b81-544c-4538-ba79-c7f6cfbbd00a&lt;/id&gt;
    &lt;/floatingip&gt;
&lt;/floatingips&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/floatingips
</codeph>
</codeblock>
</section>
<section id="get_fIP"> <title>4.5.5.2.2 Show Floating IPs</title>
</section>
<section id="get-v20floatingipsid"> <title>GET /v2.0/floatingips/{id}</title>
<p>This operation will show the details of the specified Floating IP.</p>
<p>This operation returns the details for a specific Floating IP whose identifier is specified in the request URI.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the <i>fields</i> query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<p>GET /v2.0/floatingips/{id}?fields=fixed_ip_address</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/floatingips/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/floatingips/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
  <b>Response Data</b>
</p>
<p>This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    floatingip: 
        {
        router_id: "797568e9-15e1-4b0a-b4a6-4181a8659897"
        tenant_id: "10979209027984"
        floating_network_id: "7da74520-9d5e-427b-a508-213c84e69616"
        fixed_ip_address: "10.1.1.100"
        floating_ip_address: "15.126.245.242"
        port_id: "da92aabc-a633-4773-b410-a5fe75245c51"
        id: "01b17b81-544c-4538-ba79-c7f6cfbbd00a"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;floatingip&gt;
    &lt;router_id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/router_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;floating_network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/floating_network_id&gt;
    &lt;fixed_ip_address&gt;10.1.1.100&lt;/fixed_ip_address&gt;
    &lt;floating_ip_address&gt;15.126.245.242&lt;/floating_ip_address&gt;
    &lt;port_id&gt;da92aabc-a633-4773-b410-a5fe75245c51&lt;/port_id&gt;
    &lt;id&gt;01b17b81-544c-4538-ba79-c7f6cfbbd00a&lt;/id&gt;
&lt;/floatingip&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/floatingips/{id}
</codeph>
</codeblock>
</section>
<section id="create_fIP"> <title>4.5.5.2.3 Create Floating IP</title>
</section>
<section id="post-v20floatingips"> <title>POST /v2.0/floatingips</title>
<p>This operation creates a Floating IP. Users can specify information for this Floating IP in the request body. This information is optional, and can be specified with an UPDATE call at a later stage. The only mandatory parameter in the request body is the external network identifier; <i>floating_network_id</i>. Floating IPs can only be created on external networks. If the network specified by <i>floating_network_id</i> is not external (for example, router:external=False), a 400 error is returned.</p>
<p>Users can associate the Floating IP with an internal port using the <i>port_id</i> attribute in the request body. If an invalid port identifier is specified, a 404 error will be returned. The internal Networking port associated with the Floating IP must have at least an IP address configured, otherwise a 400 error will be returned.</p>
<p>If the internal Networking port and IP address, selected for association, are already associated with another Floating IP, a 409 error will be returned.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
None</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/floatingips
Content-Type: application/json
Accept: application/json

{
    "floatingip":
        {
        "floating_network_id": "{id}",
        "port_id": "{id}"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/floatingips
Content-Type:  application/xml
Accept: application/xml

&lt;floatingip&gt;
    &lt;floating_network_id&gt;{id}&lt;/floating_network_id&gt;
    &lt;port_id&gt;{id}&lt;/port_id&gt;
&lt;/floatingip&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    "floatingip":
        {
        "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
        "tenant_id": "10979209027984",
        "floating_network_id": "7da74520-9d5e-427b-a508-213c84e69616",
        "fixed_ip_address": "10.1.1.1",
        "floating_ip_address": "15.126.227.179",
        "port_id": "21a65d97-7599-4691-8d1a-5476fb2700eb",
        "id": "2f245a7b-796b-4f26-9cf9-9e82d248fda7"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;floatingip&gt;
    &lt;router_id&gt;797568e9-15e1-4b0a-b4a6-4181a8659897&lt;/router_id&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;floating_network_id&gt;7da74520-9d5e-427b-a508-213c84e69616&lt;/floating_network_id&gt;
    &lt;fixed_ip_address&gt;10.1.1.1&lt;/fixed_ip_address&gt;
    &lt;floating_ip_address&gt;15.126.227.179&lt;/floating_ip_address&gt;
    &lt;port_id&gt;21a65d97-7599-4691-8d1a-5476fb2700eb&lt;/port_id&gt;
    &lt;id&gt;e2214114-2b6a-493e-a28e-6eb4f4ddd778&lt;/id&gt;
&lt;/floatingip&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Duplicate Floating IP present.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"floatingip":{"floating_network_id":"{id}","port_id":"{id}"}}' {BaseURI}/v2.0/floatingips
</codeph>
</codeblock>
</section>
<section id="update_fIP"> <title>4.5.5.2.4 Update Floating IP</title>
</section>
<section id="put-v20floatingipsid"> <title>PUT /v2.0/floatingips/{id}</title>
<p>This operation updates an association between a floating IP and a networking port. The association process is exactly the same as the one discussed for the create Floating IP operation.</p>
<p>To disassociate a floating IP from a port, set the <i>port_id</i> request attribute to null or omit it from the request body.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
None</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON - Associate Request</p>
<codeblock>
  <codeph>PUT /v2.0/floatingips/{id}
Content-Type: application/json
Accept: application/json

{
    "floatingip":
        {
        "port_id": "{id}"
        }
}
</codeph>
</codeblock>
<p>JSON - Disassociate Request</p>
<codeblock>
  <codeph>PUT /v2.0/floatingips/{id}
Content-Type:  application/json
Accept: application/json

{
    "floatingip":
        {
        "port_id": null
        }
}
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
This operation returns a response body.</p>
<p>JSON - Associate response</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    floatingip:
        {
        "router_id": "d23abc8d-2991-4a55-ba98-2aaea84cc72f",
        "tenant_id": "10979209027984",
        "floating_network_id": "7da74520-9d5e-427b-a508-213c84e69616",
        "fixed_ip_address": "10.0.0.4",
        "floating_ip_address": "15.126.245.246",
        "port_id": "fc861431-0e6c-4842-a0ed-e2363f9bc3a8",
        "id": "01b17b81-544c-4538-ba79-c7f6cfbbd00a"
        }
}
</codeph>
</codeblock>
<p>JSON - Disassociate response</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    floatingip: 
        {
        router_id: null
        tenant_id: "10979209027984"
        floating_network_id: "7da74520-9d5e-427b-a508-213c84e69616"
        fixed_ip_address: null
        floating_ip_address: "15.126.245.246"
        port_id: null
        id: "01b17b81-544c-4538-ba79-c7f6cfbbd00a"
        }
}
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">Malformed request in URI or request body.</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example - associate</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"floatingip":{"port_id":"{id}"}}' {BaseURI}/v2.0/floatingips/{id}
</codeph>
</codeblock>
<p>
  <b>Curl Example - disassociate</b>
</p>
<codeblock>
  <codeph>curl -i -k -X PUT -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"floatingip":{"port_id":"null"}}' {BaseURI}/v2.0/floatingips/{id}
</codeph>
</codeblock>
</section>
<section id="delete_fIP"> <title>4.5.5.2.5 Delete Floating IP</title>
</section>
<section id="delete-v20floatingipsid"> <title>DELETE /v2.0/floatingips/{id}</title>
<p>The operation removes the floating IP whose identifier is specified in the request URI. If the floating IP being removed is associated with a port, the association is removed as well.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
None</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/floatingips/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/floatingips/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/floatingips/{id}
</codeph>
</codeblock>
</section>
<section id="securitygroup_api"> <title>4.5.6 Security Groups</title>
<p>Manage Security Groups.</p>
<p>Security groups and security group rules allows administrators and tenants the ability to specify the type of traffic and direction (ingress/egress) that is allowed to pass through a port. A security group is a container for security group rules.</p>
<p>When a port is created in Networking it is associated with a security group. If a security group is not specified the port will be associated with a 'default' security group. <b>By default this group will allow ingress traffic over port 22 (SSH) and allow all egress.</b> Rules can be added to this group in order to change the behavior.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">security-groups</entry>
  <entry align="left">List of security groups accessible to the tenant submitting the request</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">security-groups/{id}</entry>
  <entry align="left">Show details of a specific security group</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">security-groups</entry>
  <entry align="left">Create a security group</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">security-groups/{id}</entry>
  <entry align="left">Delete a security group</entry>
</row>
</tbody>
</tgroup>
</table>
<p>The following table describes the attributes for Security Group objects:</p>
<table>
<tgroup cols="7">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N/A</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the security group.</entry>
</row>
<row>
<entry align="left">name</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Human-readable name for the security group. Name is not required to be unique. A new Security Group is not allowed to be named <i>default</i> as a rule of that name is automatically created for the tenant.</entry>
</row>
<row>
<entry align="left">description</entry>
  <entry align="left">string</entry>
  <entry align="left">No</entry>
  <entry align="left">CRU</entry>
  <entry align="left">None</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Human-readable description of a security group.</entry>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">No</entry>
  <entry align="left">CR</entry>
  <entry align="left">Derived from Authentication token</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify an identifier other than their own.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>NOTE:</b> Updating of a Security Group Rule is not supported.  To accomplish the update operation you must first delete and then create the new rule.</p>
<p>Upon creation of the Security Group, it can be attached to a port using the <xref type="section" href="#topic127886/port_api">Port APIs</xref>
</p>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Quota of ten (10) security groups and fifty (50) security group rules, per tenant, is applied.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_securityGroup"> <title>4.5.6.1 List Security Groups</title>
</section>
<section id="get-v20security-groups"> <title>GET /v2.0/security-groups</title>
<p>This operation returns a list of security groups accessible to the tenant who submitted the request.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. 
Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/security-groups?tenant_id={id} 
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/security-groups
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/security-groups
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_groups: [1]
        0:  {
        tenant_id: "10979209027984"
        name: "default"
        description: "default"
        security_group_rules: [3]
            0:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv6"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "1af33e6f-9136-43d3-950a-b5b70cb405aa"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
            1:  {
            remote_group_id: null
            direction: "ingress"
            remote_ip_prefix: "0.0.0.0/0"
            protocol: "tcp"
            ethertype: "IPv4"
            tenant_id: "10979209027984"
            port_range_max: 22
            port_range_min: 22
            id: "a022b074-832b-42ee-a02a-f17eb6cf5854"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
            2:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv4"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "f48c1d8d-5664-496c-bcb9-f86dde44727a"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
        id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;security_groups&gt;
    &lt;security_group&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;name&gt;default&lt;/name&gt;
    &lt;description&gt;default&lt;/description&gt;
    &lt;security_group_rules&gt;
        &lt;security_group_rule&gt;
        &lt;remote_group_id xsi:nil="true" /&gt;
        &lt;direction&gt;egress&lt;/direction&gt;
        &lt;remote_ip_prefix xsi:nil="true" /&gt;
        &lt;protocol xsi:nil="true" /&gt;
        &lt;ethertype&gt;IPv6&lt;/ethertype&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;port_range_max xsi:nil="true" /&gt;
        &lt;port_range_min xsi:nil="true" /&gt;
        &lt;id&gt;1af33e6f-9136-43d3-950a-b5b70cb405aa&lt;/id&gt;
        &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
        &lt;/security_group_rule&gt;
        &lt;security_group_rule&gt;
        &lt;remote_group_id xsi:nil="true" /&gt;
        &lt;direction&gt;ingress&lt;/direction&gt;
        &lt;remote_ip_prefix&gt;0.0.0.0/0&lt;/remote_ip_prefix&gt;
        &lt;protocol&gt;tcp&lt;/protocol&gt;
        &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;port_range_max quantum:type="long"&gt;22&lt;/port_range_max&gt;
        &lt;port_range_min quantum:type="long"&gt;22&lt;/port_range_min&gt;
        &lt;id&gt;a022b074-832b-42ee-a02a-f17eb6cf5854&lt;/id&gt;
        &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
        &lt;/security_group_rule&gt;
        &lt;security_group_rule&gt;
        &lt;remote_group_id xsi:nil="true" /&gt;
        &lt;direction&gt;egress&lt;/direction&gt;
        &lt;remote_ip_prefix xsi:nil="true" /&gt;
        &lt;protocol xsi:nil="true" /&gt;
        &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
        &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
        &lt;port_range_max xsi:nil="true" /&gt;
        &lt;port_range_min xsi:nil="true" /&gt;
        &lt;id&gt;f48c1d8d-5664-496c-bcb9-f86dde44727a&lt;/id&gt;
        &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
        &lt;/security_group_rule&gt;
        &lt;/security_group_rules&gt;
    &lt;id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/id&gt;
    &lt;/security_group&gt;
&lt;/security_groups&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-groups    
</codeph>
</codeblock>
</section>
<section id="get_securityGroup"> <title>4.5.6.2 Show Security Group</title>
</section>
<section id="get-v20security-groupsid"> <title>GET /v2.0/security-groups/{id}</title>
<p>This operation returns details of the specified security group.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<p>GET /v2.0/security-groups/{id}?name={name}</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/security-groups/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/security-groups/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_groups: [1]
        0:  {
        tenant_id: "10979209027984"
        name: "default"
        description: "default"
        security_group_rules: [3]
            0:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv6"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "1af33e6f-9136-43d3-950a-b5b70cb405aa"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
            1:  {
            remote_group_id: null
            direction: "ingress"
            remote_ip_prefix: "0.0.0.0/0"
            protocol: "tcp"
            ethertype: "IPv4"
            tenant_id: "10979209027984"
            port_range_max: 22
            port_range_min: 22
            id: "a022b074-832b-42ee-a02a-f17eb6cf5854"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
            2:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv4"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "f48c1d8d-5664-496c-bcb9-f86dde44727a"
            security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
            }
        id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;security_groups&gt;
&lt;security_group&gt;
&lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
&lt;name&gt;default&lt;/name&gt;
&lt;description&gt;default&lt;/description&gt;
    &lt;security_group_rules&gt;
    &lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;egress&lt;/direction&gt;
    &lt;remote_ip_prefix xsi:nil="true" /&gt;
    &lt;protocol xsi:nil="true" /&gt;
    &lt;ethertype&gt;IPv6&lt;/ethertype&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max xsi:nil="true" /&gt;
    &lt;port_range_min xsi:nil="true" /&gt;
    &lt;id&gt;1af33e6f-9136-43d3-950a-b5b70cb405aa&lt;/id&gt;
    &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
    &lt;/security_group_rule&gt;
    &lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;ingress&lt;/direction&gt;
    &lt;remote_ip_prefix&gt;0.0.0.0/0&lt;/remote_ip_prefix&gt;
    &lt;protocol&gt;tcp&lt;/protocol&gt;
    &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max quantum:type="long"&gt;22&lt;/port_range_max&gt;
    &lt;port_range_min quantum:type="long"&gt;22&lt;/port_range_min&gt;
    &lt;id&gt;a022b074-832b-42ee-a02a-f17eb6cf5854&lt;/id&gt;
    &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
    &lt;/security_group_rule&gt;
    &lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;egress&lt;/direction&gt;
    &lt;remote_ip_prefix xsi:nil="true" /&gt;
    &lt;protocol xsi:nil="true" /&gt;
    &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max xsi:nil="true" /&gt;
    &lt;port_range_min xsi:nil="true" /&gt;
    &lt;id&gt;f48c1d8d-5664-496c-bcb9-f86dde44727a&lt;/id&gt;
    &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
    &lt;/security_group_rule&gt;
    &lt;/security_group_rules&gt;
    &lt;id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/id&gt;
    &lt;/security_group&gt;
&lt;/security_groups&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-groups/{id}
</codeph>
</codeblock>
</section>
<section id="create_securityGroup"> <title>4.5.6.3 Create Security Group</title>
</section>
<section id="post-v20security-groups"> <title>POST /v2.0/security-groups</title>
<p>This operation creates a new Security Group.</p>
<p>Rules may be added to the Security Group through [Create Security Group Rule](#create_Security
        GroupRule) and deleted via <xref href="#topic127886/delete_securityGroupRule" format="dita">Delete Security Group
          Rule</xref>.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/security-groups
Content-Type: application/json
Accept: application/json

{
    "security_group":
        {
        "name": "{name}"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/security-groups
Content-Type: application/xml
Accept: application/xml

&lt;security_group&gt;
  &lt;name&gt;{name}&lt;/name&gt;
&lt;/security_group&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation returns a response body.</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_group: {
        tenant_id: "10979209027984"
        name: "SecGroup_Name"
        description: ""
        security_group_rules: [2]
            0:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv4"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "7b88c89a-e818-455e-bbf8-733ac60fce59"
            security_group_id: "6b7eec04-3586-4c5d-8296-f970724705c1"
            }
            1:  {
            remote_group_id: null
            direction: "egress"
            remote_ip_prefix: null
            protocol: null
            ethertype: "IPv6"
            tenant_id: "10979209027984"
            port_range_max: null
            port_range_min: null
            id: "5ef76035-c9d4-4dfd-aecb-89f724c4ed5f"
        security_group_id: "6b7eec04-3586-4c5d-8296-f970724705c1"}
        id: "6b7eec04-3586-4c5d-8296-f970724705c1"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;security_group&gt;
&lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
&lt;name&gt;SecGroup_Name&lt;/name&gt;
&lt;description /&gt;
  &lt;security_group_rules&gt;
    &lt;security_group_rule&gt;
      &lt;remote_group_id xsi:nil="true" /&gt;
      &lt;direction&gt;egress&lt;/direction&gt;
      &lt;remote_ip_prefix xsi:nil="true" /&gt;
      &lt;protocol xsi:nil="true" /&gt;
      &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
      &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
      &lt;port_range_max xsi:nil="true" /&gt;
      &lt;port_range_min xsi:nil="true" /&gt;
      &lt;id&gt;4767f837-58da-4b11-8999-7ad8a6048257&lt;/id&gt;
      &lt;security_group_id&gt;3c8a70ef-a55f-412f-9d1d-754e963ddeea&lt;/security_group_id&gt;
    &lt;/security_group_rule&gt;
  &lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;egress&lt;/direction&gt;
    &lt;remote_ip_prefix xsi:nil="true" /&gt;
    &lt;protocol xsi:nil="true" /&gt;
    &lt;ethertype&gt;IPv6&lt;/ethertype&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max xsi:nil="true" /&gt;
    &lt;port_range_min xsi:nil="true" /&gt;
    &lt;id&gt;13e888df-e290-477f-8934-8fc0d36da590&lt;/id&gt;
    &lt;security_group_id&gt;3c8a70ef-a55f-412f-9d1d-754e963ddeea&lt;/security_group_id&gt;
    &lt;/security_group_rule&gt;
  &lt;/security_group_rules&gt;
&lt;id&gt;3c8a70ef-a55f-412f-9d1d-754e963ddeea&lt;/id&gt;
&lt;/security_group&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Disabled or suspended user making the request.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"security_group": {"name": "{name}"}}' {BaseURI}/v2.0/security-groups/{id}
</codeph>
</codeblock>
</section>
<section id="delete_securityGroup"> <title>4.5.6.4 Delete Security Group</title>
</section>
<section id="delete-v20security-groupssecgroup-id"> <title>DELETE /v2.0/security-groups/{SecGroup_ID}</title>
<p>This operation deletes the requested Security Group.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/security-groups/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/security-groups/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content returned</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">403</entry>
  <entry align="left">Forbidden</entry>
  <entry align="left">Operation not allowed.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Conflict</entry>
  <entry align="left">Unable to delete</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-groups/{id}
</codeph>
</codeblock>
</section>
<section id="securitygrouprules_api"> <title>4.5.7 Security Group Rules</title>
<p>Manage Security Group Rules.</p>
<p>Security group rules allows administrators and tenants the ability to specify the type of traffic and direction (ingress/egress) that is allowed to pass through a port.</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Verb</entry>
  <entry align="left">URI</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">GET</entry>
  <entry align="left">security-group-rules</entry>
  <entry align="left">List of security group rules accessible to the tenant submitting the request.</entry>
</row>
<row>
<entry align="left">GET</entry>
  <entry align="left">security-group-rules/{id}</entry>
  <entry align="left">Show details of a specific security group rule.</entry>
</row>
<row>
<entry align="left">POST</entry>
  <entry align="left">security-group-rules</entry>
  <entry align="left">Create a security group rule</entry>
</row>
<row>
<entry align="left">DELETE</entry>
  <entry align="left">security-group-rules/{id}</entry>
  <entry align="left">Delete the specified security group rule</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>NOTE</b> Updating of a Security Group Rule is not supported.  To accomplish the update operation you must first delete and then create the new rule.</p>
<p>The following table describes the attributes for Security Group Rule objects:</p>
<table>
<tgroup cols="7">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<colspec colname="col4"/>
<colspec colname="col5"/>
<colspec colname="col6"/>
<colspec colname="col7"/>
<thead>
<row>
<entry align="left">Attribute</entry>
  <entry align="left">Type</entry>
  <entry align="left">Required</entry>
  <entry align="left">CRUD</entry>
  <entry align="left">Default Value</entry>
  <entry align="left">Validation</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Y</entry>
  <entry align="left">R</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">UUID of the security group rule.</entry>
</row>
<row>
<entry align="left">security-group-id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">Y</entry>
  <entry align="left">C</entry>
  <entry align="left">generated</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Security group ID the rule is associated with.</entry>
</row>
<row>
<entry align="left">direction</entry>
  <entry align="left">string</entry>
  <entry align="left">Y</entry>
  <entry align="left">CR</entry>
  <entry align="left">N/A</entry>
  <entry align="left"/>
  <entry align="left">Ingress or egress: The direction in which the security group rule is applied. For a compute instance, an 'ingress' security group rule matches traffic that is incoming (ingress) for that instance. An 'egress' rule is applied to traffic leaving the instance.</entry>
</row>
<row>
<entry align="left">protocol</entry>
  <entry align="left">string</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">None</entry>
  <entry align="left"/>
  <entry align="left">IP Protocol (icmp, tcp, udp, etc)</entry>
</row>
<row>
<entry align="left">port_range_min</entry>
  <entry align="left">integer</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">None</entry>
  <entry align="left"/>
  <entry align="left">The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.</entry>
</row>
<row>
<entry align="left">port_range_max</entry>
  <entry align="left">integer</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">None</entry>
  <entry align="left"/>
  <entry align="left">The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.</entry>
</row>
<row>
<entry align="left">ethertype</entry>
  <entry align="left">string</entry>
  <entry align="left">N</entry>
  <entry align="left"/>
  <entry align="left">None</entry>
  <entry align="left">R</entry>
  <entry align="left">Ethertype in L2 packet (IPv4, IPv6, etc).</entry>
</row>
<row>
<entry align="left">remote_ip_prefix</entry>
  <entry align="left">string</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">None</entry>
  <entry align="left">Must be a valid CIDR address</entry>
  <entry align="left">The remote IP prefix to be associated with this security group rule. You can specify either remote_group_id or remote_ip_prefix in the request body. This attribute matches the specified IP prefix as the source IP address of the IP packet.</entry>
</row>
<row>
<entry align="left">remote_group_id</entry>
  <entry align="left">uuid</entry>
  <entry align="left">N</entry>
  <entry align="left">CR</entry>
  <entry align="left">generated</entry>
  <entry align="left"/>
  <entry align="left">The remote group ID to be associated with this security group rule. You can specify either remote_group_id or remote_ip_prefix in the request body.</entry>
</row>
<row>
<entry align="left">tenant_id</entry>
  <entry align="left">uuid-str</entry>
  <entry align="left">N</entry>
  <entry align="left">R</entry>
  <entry align="left">Derived from Authentication token</entry>
  <entry align="left">N/A</entry>
  <entry align="left">Owner of the network.  Only admin users can specify an identifier other than their own.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
<b>Status Lifecycle</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Rate Limits</b>
<!--A BR tag was used here in the original source.-->
Rate limits apply.</p>
<p>
<b>Quota Limits</b>
<!--A BR tag was used here in the original source.-->
Quota of fifty (50) security group rules, per tenant, is applied.</p>
<p>
<b>Business Rules</b>
<!--A BR tag was used here in the original source.-->
None</p>
</section>
<section id="list_securityGroupRules"> <title>4.5.7.1 List Security Group Rules</title>
</section>
<section id="get-v20security-group-rules"> <title>GET /v2.0/security-group-rules</title>
<p>This operation returns a list of the Security Group Rules accessible to the tenant submitting the request.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. 
Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/security-groups-rules?tenant_id={id} 
</codeph>
</codeblock>
<p>
<b>Data Parameters</b> 
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/security-group-rules
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/security-group-rules
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
  <b>Response Data</b>
</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_group_rules: [1]
        0:  {
        remote_group_id: null
        direction: "egress"
        remote_ip_prefix: null
        protocol: null
        tenant_id: "10979209027984"
        port_range_max: null
        security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
        port_range_min: null
        ethertype: "IPv6"
        id: "1af33e6f-9136-43d3-950a-b5b70cb405aa"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;security_group_rules&gt;
    &lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;egress&lt;/direction&gt;
    &lt;remote_ip_prefix xsi:nil="true" /&gt;
    &lt;protocol xsi:nil="true" /&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max xsi:nil="true" /&gt;
    &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
    &lt;port_range_min xsi:nil="true" /&gt;
    &lt;ethertype&gt;IPv6&lt;/ethertype&gt;
    &lt;id&gt;1af33e6f-9136-43d3-950a-b5b70cb405aa&lt;/id&gt;
    &lt;/security_group_rule&gt;
&lt;/security_group_rules&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-group-rules
</codeph>
</codeblock>
</section>
<section id="get_securityGroupRules"> <title>4.5.7.2 Show Security Group Rules</title>
</section>
<section id="get-security-group-rulesid"> <title>GET /security-group-rules/{id}</title>
<p>This operation returns details of a specified Security Group Rule.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
Users can control which attributes should be returned by using the fields query parameter. See <xref type="section" href="#topic127886/filtering">Filtering and Column Selection</xref> for more information. Filtering is supported on all top level attributes of an API entity. For example:</p>
<codeblock>
  <codeph>GET /v2.0/security-groups-rules/{id}?name={name} 
</codeph>
</codeblock>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>GET /v2.0/security-group-rules/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>GET /v2.0/security-group-rules/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
200 - OK</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
  <b>Response Data</b>
</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_group_rule: 
        {
        remote_group_id: null
        direction: "egress"
        remote_ip_prefix: null
        protocol: null
        tenant_id: "10979209027984"
        port_range_max: null
        security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
        port_range_min: null
        ethertype: "IPv6"
        id: "1af33e6f-9136-43d3-950a-b5b70cb405aa"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
  &lt;security_group_rule&gt;
      &lt;remote_group_id xsi:nil="true" /&gt;
      &lt;direction&gt;egress&lt;/direction&gt;
      &lt;remote_ip_prefix xsi:nil="true" /&gt;
      &lt;protocol xsi:nil="true" /&gt;
      &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
      &lt;port_range_max xsi:nil="true" /&gt;
      &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
      &lt;port_range_min xsi:nil="true" /&gt;
      &lt;ethertype&gt;IPv6&lt;/ethertype&gt;
      &lt;id&gt;1af33e6f-9136-43d3-950a-b5b70cb405aa&lt;/id&gt;
  &lt;/security_group_rule&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Not Found</entry>
  <entry align="left">Non existent URI, resorce not found..</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X GET -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-group-rules/{id}
</codeph>
</codeblock>
</section>
<section id="create_securityGroupRule"> <title>4.5.7.3 Create Security Group Rule</title>
</section>
<section id="post-v20security-group-rules"> <title>POST /v2.0/security-group-rules</title>
<p>This operation creates a new Security Group Rule.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation requires a request body.  Both <i>direction</i> and <i>security_group_id</i> attributes are required.</p>
<p>JSON</p>
<codeblock>
  <codeph>POST /v2.0/security-group-rules
Content-Type: application/json
Accept: application/json

{
    "security_group_rule":
        {
        "direction": "ingress",
        "port_range_min": 3389,
        "tenant_id": "10979209027984",
        "ethertype": "IPv4",
        "port_range_max": 3389,
        "protocol": "tcp",
        "security_group_id": "{id}"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>POST /v2.0/security_group_rules
Content-Type: application/xml
Accept: application/xml

&lt;security_group_rule&gt;
    &lt;direction&gt;ingress&lt;/direction&gt;
    &lt;port_range_min&gt;80&lt;/port_range_min&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
    &lt;port_range_max&gt;80&lt;/port_range_max&gt;
    &lt;protocol&gt;tcp&lt;/protocol&gt;
    &lt;security_group_id&gt;{id}&lt;/security_group_id&gt;
&lt;/security_group_rule&gt;
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
201 - Created</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
  <b>Response Data</b>
</p>
<p>JSON</p>
<codeblock>
  <codeph>Content-Type: application/json

{
    security_group_rule: 
        {
        remote_group_id: null
        direction: "ingress"
        remote_ip_prefix: null
        protocol: "tcp"
        tenant_id: "10979209027984"
        port_range_max: 3389
        security_group_id: "c70771a4-e0c8-48d8-90e3-489b7897ae45"
        port_range_min: 3389
        ethertype: "IPv4"
        id: "1b65239c-5a28-4c2f-b53a-63567a5224f4"
        }
}
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>Content-Type: application/xml

&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
&lt;security_group_rule&gt;
    &lt;remote_group_id xsi:nil="true" /&gt;
    &lt;direction&gt;ingress&lt;/direction&gt;
    &lt;remote_ip_prefix xsi:nil="true" /&gt;
    &lt;protocol&gt;tcp&lt;/protocol&gt;
    &lt;tenant_id&gt;10979209027984&lt;/tenant_id&gt;
    &lt;port_range_max quantum:type="int"&gt;80&lt;/port_range_max&gt;
    &lt;security_group_id&gt;c70771a4-e0c8-48d8-90e3-489b7897ae45&lt;/security_group_id&gt;
    &lt;port_range_min quantum:type="int"&gt;80&lt;/port_range_min&gt;
    &lt;ethertype&gt;IPv4&lt;/ethertype&gt;
    &lt;id&gt;84d13d56-7763-417d-8f73-887bef88c38d&lt;/id&gt;
&lt;/security_group_rule&gt;
</codeph>
</codeblock>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">The request cannot be fulfilled due to bad syntax</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation.</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Item Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
<row>
<entry align="left">409</entry>
  <entry align="left">Build in Process</entry>
  <entry align="left"/>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X POST -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' -d '{"security_group_rule":{"direction": "ingress","port_range_min": 3389,"tenant_id": "10979209027984","ethertype": "IPv4","port_range_max": 3389,"protocol": "tcp","security_group_id": "{id}"}}' {BaseURI}/v2.0/security-group-rules
</codeph>
</codeblock>
</section>
<section id="delete_securityGroupRule"> <title>4.5.7.4 Delete Security Group Rule</title>
</section>
<section id="delete-v20security-group-rulesid"> <title>DELETE /v2.0/security-group-rules/{id}</title>
<p>This operation deletes the specified Security Group Rule.</p>
<p>
<b>Request Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>
<b>URL Parameters</b>
<!--A BR tag was used here in the original source.-->
N/A</p>
<p>
<b>Data Parameters</b>
<!--A BR tag was used here in the original source.-->
This operation does not require a request body.</p>
<p>JSON</p>
<codeblock>
  <codeph>DELETE /v2.0/security-group-rules/{id}
Content-Type: application/json
Accept: application/json
</codeph>
</codeblock>
<p>XML</p>
<codeblock>
  <codeph>DELETE /v2.0/security-group-rules/{id}
Content-Type: application/xml
Accept: application/xml
</codeph>
</codeblock>
<p>
<b>Success Response</b>
<!--A BR tag was used here in the original source.-->
204 - Delete successful; no content returned</p>
<p>
<b>Status Code</b>
<!--A BR tag was used here in the original source.-->
See <xref type="section" href="#topic127886/http_codes">HTTP Status Codes</xref> for more information.</p>
<p>
<b>Response Data</b>
<!--A BR tag was used here in the original source.-->
This operation does not return a response body.</p>
<p>
<b>Error Response</b>
<!--A BR tag was used here in the original source.-->
If an error occurs, the response body contains a description of the error.</p>
<p>
  <b>Status Code</b>
</p>
<table>
<tgroup cols="3">
<colspec colname="col1"/>
<colspec colname="col2"/>
<colspec colname="col3"/>
<thead>
<row>
<entry align="left">Status Code</entry>
  <entry align="left">Description</entry>
  <entry align="left">Reasons</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">400</entry>
  <entry align="left">Bad Request</entry>
  <entry align="left">The request cannot be fulfilled due to bad syntax</entry>
</row>
<row>
<entry align="left">401</entry>
  <entry align="left">Unauthorized</entry>
  <entry align="left">The caller does not have the privilege required to perform the operation .</entry>
</row>
<row>
<entry align="left">404</entry>
  <entry align="left">Item Not Found</entry>
  <entry align="left">Non existent URI, resource not found.</entry>
</row>
</tbody>
</tgroup>
</table>
<p>
  <b>Curl Example</b>
</p>
<codeblock>
  <codeph>curl -i -k -X DELETE -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'X-Auth-Token: {Auth_Token}' {BaseURI}/v2.0/security-group-rules/{id}
</codeph>
</codeblock>
</section>
<section id="5-glossary"> <title>5. Glossary</title>
<table>
<tgroup cols="2">
<colspec colname="col1"/>
<colspec colname="col2"/>
<thead>
<row>
<entry align="left">Term</entry>
  <entry align="left">Description</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left">CIDR</entry>
  <entry align="left">Classless Inter-Domain Routing (or supernetting)</entry>
</row>
<row>
<entry align="left">CIDR</entry>
  <entry align="left">Classless Inter-Domain Routing (or supernetting)</entry>
</row>
<row>
<entry align="left">CRUD</entry>
  <entry align="left">In computer programming, create, read, update, and delete (CRUD) functions are the basic functions of persistent storage.</entry>
</row>
<row>
<entry align="left">Entity</entry>
  <entry align="left">Any piece of hardware or software that wants to connect to the network services. An entity can use Networking services by implementing a VIF.</entry>
</row>
<row>
<entry align="left">IPAM</entry>
  <entry align="left">Internet Protocol Address Management (IPAM) is a means of planning, tracking, and managing the Internet Protocol (IP) address space that is used in a network.</entry>
</row>
<row>
<entry align="left">L2 Network</entry>
  <entry align="left">A virtual Ethernet network that is managed by the Networking service. Currently, only Ethernet networks are managed.</entry>
</row>
<row>
<entry align="left">Network</entry>
  <entry align="left">An isolated virtual layer-2 broadcast domain that is typically reserved for the tenant who created it unless the network is configured to be shared. Tenants can create multiple networks until they reach the thresholds specified by per-tenant quotas.</entry>
</row>
<row>
<entry align="left">Plugin</entry>
  <entry align="left">A software component that implements API v2.</entry>
</row>
<row>
<entry align="left">Port</entry>
  <entry align="left">A virtual switch port on a logical network switch. Virtual instances attach their interfaces into ports. The logical port also defines the MAC address and the IP addresses to be assigned to the interfaces plugged into them. When IP addresses are associated to a port, this also implies the port is associated with a subnet, as the IP address was taken from the allocation pool for a specific subnet.</entry>
</row>
<row>
<entry align="left">Subnet</entry>
  <entry align="left">An IP address block that can be used to assign IP addresses to virtual instances. Each subnet must have a CIDR and must be associated with a network. IPs can be either selected from the whole subnet CIDR or from allocation pools that can be specified by the user.</entry>
</row>
<row>
<entry align="left">URI</entry>
  <entry align="left">Uniform Resource Identifier</entry>
</row>
<row>
<entry align="left">VIF</entry>
  <entry align="left">Virtual Network Interface also known as a Virtual Interface</entry>
</row>
<row>
<entry align="left">VIP</entry>
  <entry align="left">Virtual IP</entry>
</row>
<row>
<entry align="left">VM</entry>
  <entry align="left">Virtual Machine (VM).  A completely isolated guest operating system installation within a normal host operating system.</entry>
</row>
<row>
<entry align="left">VPC</entry>
  <entry align="left">Virtual Private Cloud</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</body>
</topic>