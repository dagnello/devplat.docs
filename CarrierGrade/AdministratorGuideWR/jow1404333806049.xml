<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic   PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic domains="(topic concept topic)                            (topic hi-d)                            (topic indexing-d)                            (topic pr-d)                            (topic sw-d)                            (topic ui-d)                            (topic wr-sw-d)                            (topic xml-d)   " id="jow1404333806049" xml:lang="en-us">
    <!-- Modification History

 -->
    <title>Templates</title>
    <shortdesc >A template is a formal set of instructions for defining and configuring a service. </shortdesc>
    <prolog>
        <author >Jim Owens</author>
    </prolog>
    <body>
        <p >Templates specify the resources to include in a service, and relationships between them.</p>
        <p >A template contains several sections, including:</p>
        <dl>
            <dlentry >
                <dt >Description</dt>
                <dd >
                    <p >You can use this section to provide comments about the service, such as its purpose or any
      special considerations when using it.</p>
                </dd>
            </dlentry>
            <dlentry >
                <dt >Parameters</dt>
                <dd >
                    <p >This section defines the parameters that you can pass to the service template. You can pass
      parameters using the command line, a web form, or an environment file.</p>
                    <p >You can include a default value for a parameter, and optionally pass a different value when
      the template is deployed. If no default value is included, you must provide a value when the
      template is deployed. Parameters without default values are called <term >mandatory
       parameters</term>.</p>
                </dd>
            </dlentry>
            <dlentry >
                <dt >Resources</dt>
                <dd >
                    <p >This section defines the resources to be created. They can be specified in any order.</p>
                </dd>
            </dlentry>
        
    <!-- dlentry>
    <dt>Mappings</dt>
    <dd>
     <p>
      <draft-comment>Jim - TO DO</draft-comment>
     </p>
    </dd>
   </dlentry -->
    <!-- dlentry>
    <dt>Outputs</dt>
    <dd>
     <p>
      <draft-comment>Jim - TO DO</draft-comment>
     </p>
    </dd>
   </dlentry --></dl>
        <p >There are two official formats for templates: CloudFormation (CFN) and
            Heat Orchestration Template (HOT).</p>
        <dl>
            <dlentry >
                <dt >CFN</dt>
                <dd >
                    <p >This format is associated with Amazon Web Services (AWS) technology. A CFN template is
      indicated by the first line:</p>
                    <codeblock >HeatTemplateFormatVersion: '2012-12-12'</codeblock>
                </dd>
            </dlentry>
            <dlentry >
                <dt >HOT</dt>
                <dd >
                    <p >This format is associated specifically with the OpenStack project. A HOT template is
      indicated by the first line: </p>
                    <codeblock >heat_template_version: 2013-05-23</codeblock>
                    <p >In HOT, some of the built-in functions are different, and lowercase is used for attribute
      names.</p>
                </dd>
            </dlentry>
        </dl>
        <p >Both formats support Amazon Web Services (AWS) resources and OpenStack
            resources, in any combination.</p>
        <p >The HP Helion OpenStack Carrier Grade includes sample service templates for demonstration
            purposes (see <xref href="jow1404915566084.xml" />). Both CFN and HOT formats are
            represented in the samples. The templates are expressed using YAML, which is the
            recommended notation for HOT. Heat templates may also be expressed using JSON, which is
            the usual notation for CFN.</p>
    </body>
</topic>