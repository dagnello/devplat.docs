<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd" >
<topic id="jow1425236666266" xml:lang="en-us">
<!-- Modification History
        
-->
    <title>Configuring the NUMA Node Allocations for a VM</title>
    <shortdesc>You can use flavor extra specs or image properties to allocate virtual
        memory and vCPU resources to virtual NUMA nodes.</shortdesc>
    <prolog><author/>
        <author/>
    </prolog>
    <body>
        
            <p>By default, the memory and CPU resources defined for a flavor are
                assigned to a single virtual NUMA node, which is mapped to an available host NUMA
                node when an instance is launched or migrated. You can specify the use of multiple
                NUMA nodes using either flavor extra specifications (which take the general form
                    <codeph>hw:specification</codeph>), or image properties (which take
                the general form <codeph>hw_specification</codeph>).</p>
            <p>By default, the available CPU and memory resources for the flavor are
                distributed equally among the NUMA nodes. You can customize the distribution of
                resources. For example, given a flavor with two NUMA nodes, three vCPUs, and 1024 MB
                of RAM, you can assign one vCPU and 512 MB to virtual NUMA node 0, and two VCPUs and
                512 MB to virtual NUMA node 1. The ability to allocate resources is useful when
                pinning virtual NUMA nodes to host NUMA nodes to optimize VM performance.</p>
            <p>By default, the memory required for a virtual NUMA node is pinned to a single host
                NUMA node to ensure high performance. For applications where this is not a concern,
                you can relax the memory allocation requirements so that the memory for a virtual
                NUMA node can be drawn from more than one host NUMA node if necessary.</p>
            <p>When deploying network guest images operating on the data path, it
                is advisable to co-locate the virtual machines, the AVS switch, physical ports, and
                all other networking elements on the same node.</p>
            <p>Use of this option should be limited to cases where fine-tuning of
                the data path on guest applications is important.</p>
            <note id="note_N10055_N10022_N1001F_N10001" type="caution">
                <p>If the virtual CPUs cannot be allocated to run on the specified node on any
                    compute node, the virtual machine may fail to launch</p>
            </note>
        
        <ol>
             
                <li>Declare the number of NUMA nodes to create on the guest.
                
                    <p>The following extra specification sets the number of NUMA
                        nodes:</p>
                    <codeblock>hw:numa_nodes=n</codeblock>
                    <p>where n is the number of
                        NUMA nodes to create (1 or more).</p>
                
                
                    <p>For example, given the flavor <codeph>numa.pinned.asym</codeph>, use the following command to create two
                        NUMA nodes.</p>
                    <codeblock>~(keystone_admin)$ nova flavor-key numa.pinned.asym set hw:numa_nodes=2</codeblock>
                
                
                    <p>To set an image property instead, you can use the following command:</p>
                    <codeblock>~(keystone_admin)$ nova image-meta image hw_numa_nodes=2</codeblock>
                
                </li>
             
                <li>For each NUMA node, assign a list of CPUs.
                
                    <p>This step is optional. By default, available CPUs for the
                        flavor are distributed evenly across the available NUMA nodes.</p>
                    <p>The following extra specification assigns CPUs to a NUMA node:</p>
                    <codeblock>hw:numa_cpus.vnode_id=cpu_list</codeblock>
                    <p>where</p>
                    <parml>
                        <plentry>
                            <pt><parmname>vnode_id</parmname></pt>
                            <pd>
                                <p>is the number used to identify the virtual NUMA
                                    node (0 for the first node, 1 for the second, and so on).</p>
                            </pd>
                        </plentry>
                        <plentry>
                            <pt><parmname>cpu_list</parmname></pt>
                            <pd>
                                <p>is a comma-separated list of vCPUs to assign to the node. The
                                    vCPUs for the flavor are enumerated beginning with 0.</p>
                            </pd>
                        </plentry>
                    </parml>
                
                
                    <p>For example, given flavor <codeph>numa.pinned.asym</codeph>, use the following command to assign
                        vCPU 0 to the first NUMA node, and vCPUs 1 and 2 to the second NUMA
                        node:</p>
                    <codeblock>~(keystone_admin)$ nova flavor-key numa.pinned.asym set hw:numa_cpus.0=0 \
hw:numa_cpus.1=1,2</codeblock>
                
                </li>
             
                <li>For each NUMA node, assign an amount of memory.
                
                    <p>This step is optional. By default, available memory for the
                        flavor is distributed evenly across the available NUMA nodes.</p>
                    <p>The following extra specification assigns memory to a NUMA node:</p>
                    <codeblock>hw:numa_mem.vnode_id=ram_size</codeblock>
                    <p>where</p>
                    <parml>
                        <plentry>
                            <pt><parmname>vnode_id</parmname></pt>
                            <pd>
                                <p>is the number used to identify the virtual NUMA
                                    node (0 for the first node, 1 for the second, and so on).</p>
                            </pd>
                        </plentry>
                        <plentry>
                            <pt><parmname>ram_size</parmname></pt>
                            <pd>
                                <p>is the amount of RAM in MB.</p>
                            </pd>
                        </plentry>
                    </parml>
                
                
                    <p>For example, given flavor <codeph>numa.pinned.asym</codeph>, use the following command to assign 512
                        MB of RAM to each of two NUMA nodes:</p>
                    <codeblock>~(keystone_admin)$ nova flavor-key numa.pinned.asym set hw:numa_mem.0=512 \
hw:numa_mem.1=512</codeblock>
                
                </li>
             
                <li>Specify whether memory for the flavor can be drawn from more than one NUMA node
                    if necessary. 
                
                    <p>This step is optional. By default, memory is allocated from the designated
                        host NUMA node only.</p>
                    <p>To control whether memory for the flavor can be drawn from more than one host
                        NUMA node, use the following extra specification:</p>
                    <codeblock>hw:numa_mempolicy=policy</codeblock>
                    <p>where <parmname>policy</parmname> is either
                            <codeph>strict</codeph> (to use only memory
                        from the designated host NUMA node) or <codeph>preferred</codeph> (to permit memory from other host NUMA nodes to
                        be used if necessary).</p>
                </li>
            
        </ol>
        
            <p>To pin the virtual NUMA nodes to host NUMA nodes, see <xref href="jow1425236723556.xml"/>.</p>
        
    </body>
</topic>