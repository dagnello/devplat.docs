<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="neutron_thirdparty_plugin_driver">
  <title>HPE Helion <tm tmtype="reg">OpenStack</tm> 2.0: Adding a 3rd Party Driver or Plugin to
    Neutron</title>
  <body>
    <section id="about">
      <p>HPE Helion OpenStack 2.0 comes with a selection of built-in plugins and drivers for the
        various Neutron components. Depending on your environment you may have a need to add
        additional 3rd party plugins or drivers. These steps should assist in this process.</p>
    </section>
    <section id="notes"><title>Notes</title>
      <p>In the future, if you upgrade your environment from HPE Helion OpenStack 2.0 to a later
        version then you will need to repeat these steps to re-apply your changes to your new
        environment.</p>
    </section>
    <section id="example"><title>Adding a 3rd Party Driver or Plugin to Neutron</title>
      <p>To show how to add a 3rd party plugin we are going to use <xref
          href="https://github.com/openstack/networking-l2gw" scope="external" format="html"
          >'networking-l2gw'</xref> as an example. You can replace the references to the
        'networking-l2gw' plugin with the plugin or driver of your choice.</p>
      <ol>
        <li>On a local Linux workstation with <codeph>python-pip</codeph> installed you will build
          or obtain a python wheel of the driver or plugin source that you want to add. <ol>
            <li>In this example, we are going to download the install package for 'networking-l2gw'
              while skipping the installation:
              <codeblock>pip install -d ./ networking-l2gw</codeblock></li>
            <li>In the same directory that the 'networking-l2gw' package is, create a
                <codeph>requirements.txt</codeph> file which you will use as the input for the pip
              wheel command in a later step.</li>
            <li>Also in that same directory you need to create an empty directory called
              'third-party-wheelhouse'.</li>
            <li>Using <codeph>pip wheel</codeph> you will create a wheel file for the
              'networking-l2gw' package: <codeblock>pip wheel --no-deps --wheel-dir=third-party-wheelhouse -r ./requirements.txt</codeblock>
              <p>The result should be a file named
                  <codeph>networking_l2gw-2015.1.1-py2-none-any.whl</codeph> in your
                'third-party-wheelhouse' directory.</p></li>
            <li>On your lifecycle-manager/deployer node, create a new directory named 'wheelhouse':
              <codeblock>mkdir ~/wheelhouse</codeblock></li>
            <li>Copy the <codeph>networking_l2gw-2015.1.1-py2-none-any.whl</codeph> file from your
              local workstation into the <codeph>~/wheelhouse</codeph> directory that you
              created.</li>
          </ol></li>
        <li>On your lifecycle-manager/deployer node, run the <codeph>venv-edit.yml</codeph> playbook
          to add the driver or plugin package to the desired virtual environment. <ol>
            <li>For our 'networking-l2gw' example we would use this command using the wheel file we
              created in the previous step:
              <codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost venv-edit.yml -e source=/opt/hlm_packager/neutron-20151026T074248Z.tgz -e suffix=0001 -e wheelhouse=~/wheelhouse -e wheel='networking_l2gw'</codeblock></li>
            <li>The result should be a new <codeph>neutron-20151026T074248Z0001.tgz</codeph> package
              in the <codeph>opt/hlm-packager</codeph> directory.</li>
          </ol></li>
        <li>You should now run the <codeph>site.yml</codeph> playbook which should create a Neutron
          virtual environment in <codeph>/opt/stack/services/neutron</codeph> which included the
          contents of the 3rd party 'networking-l2gw' package:
          <codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts site.yml</codeblock></li>
      </ol>
    </section>
  </body>
</topic>
