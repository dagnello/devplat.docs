<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_vsf_hnh_ts">
  <title>HPE Helion 2.0 Development Platform: Install the Database Service</title>
  <body>
<section id="install-database">
      <title>Prerequisites</title>
      <ul>
        <li>The HDP Installer 2.0, also known as HDPI, must already <xref
            href="devplatform_install_platform.dita#topic_gly_xmh_ts">be installed</xref>.</li>
        <li>A properly configured <xref href="install_cloudsyaml.dita#topic_wzw_r4w_rt"
            >clouds.yaml</xref> file.</li>
        <li>Configure Availability Zones, if your installation requires them.
          <!--(pull that section and link to this li)--></li>
        <li>Check your quotas so you don't run over.<!-- (pull section and link to li)--></li>
      </ul>
    </section>

<section id="availability-zones"> <title>Configure Availability Zones</title>
<p>To configure the Database Service in a highly available manner, it is necessary to create
        separate availability zones. Best practice is to create three availability zones. <note>All
          hosts should be associated with one of these availability zones, or the Database Service
          will not be able to provision a database instance on that host. This may cause the
          Database Service may run out of capacity even though there are unassociated hosts that
          still have room.</note></p>
<p>The following steps show how to create three availability zones and assign a compute host to the zone.</p>
<ol>
  <li>Download an RC file for the admin user and project.
            <!--this is going to be replaced with a commandline command; ALS may have provided--><ol
            id="ol_bpk_1c1_4t">
            <li> Log in to Horizon using the admin account.</li>
            <li>Download the OpenStack RC file. <p>
                <image placement="break" href="../../../media/quickstartDownloadRCFile.png"
                  id="image_asb_jvy_nt"/>
              </p></li>
            <li>Use <codeph>scp</codeph> to copy the RC file over to the Deployer.</li>
            <li>SSH to the Deployer and source the RC file. You will need to provide the same admin
              password that you used to log in to Horizon. <p>
                <codeblock> source admin-openrc.sh</codeblock>
              </p></li>
          </ol></li>
<li>Execute the following commands to create three availability zones named: "AZ-1", "AZ-2" and
          "AZ-3".<codeblock>openstack aggregate create --zone AZ-1 aggregate-AZ-1
openstack aggregate create --zone AZ-2 aggregate-AZ-2
openstack aggregate create --zone AZ-3 aggregate-AZ-3</codeblock></li>
<li> Validate that the availability zones were correctly created by issuing the following
          command.<codeblock>openstack aggregate list</codeblock></li>
<li> The following commands will add a host to your newly created aggregate. Execute this command
          once for every host that you wish to associate with an
          aggregate.<codeblock>openstack aggregate add host &lt;aggregate name or id&gt; &lt;host&gt;</codeblock></li>
<li> The following command can be used to list all availability zones and the hosts associated with
          each one.<codeblock>openstack availability zone list</codeblock></li>
</ol>
</section>
<section id="quotas"> <title>Set Quotas<!-- (pull into separate section)--></title>
<p>The project tenant must have sufficient quota available and unused resources for the service to
        use. To check existing quota availability, log in to Horizon as the <b>admin</b> user and
        open the <b>Overview</b> panel under the <b>Compute</b> tab. </p>
<p>If you are not configuring the Database Service to be highly available you must have the following quota available:</p>
<table>
<tgroup cols="2">
          <colspec colname="col1" colwidth="132pt"/>
          <colspec colname="col2" colwidth="77.25pt"/>
          <thead>
            <row>
              <entry>Resource</entry>
              <entry align="right">Usage</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Floating IPs</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Instances</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Networks</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>RAM (GB)</entry>
              <entry align="right">24</entry>
            </row>
            <row>
              <entry>Routers</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>Security Groups</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Volumes</entry>
              <entry align="right">4</entry>
            </row>
            <row>
              <entry>Volume Storage (GB)</entry>
              <entry align="right">160</entry>
            </row>
          </tbody>
        </tgroup>
</table>
<p>If you have set up Availability Zones and plan to install the Database Service in a highly-available configuration you must have the following quota available:</p>
<table>
<tgroup cols="2">
          <colspec colname="col1" colwidth="120pt"/>
          <colspec colname="col2" colwidth="87.75pt"/>
          <thead>
            <row>
              <entry>Resource</entry>
              <entry align="right">Usage</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Floating IPs</entry>
              <entry align="right">16</entry>
            </row>
            <row>
              <entry>Instances</entry>
              <entry align="right">16</entry>
            </row>
            <row>
              <entry>Networks</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>RAM (GB)</entry>
              <entry align="right">64</entry>
            </row>
            <row>
              <entry>Routers</entry>
              <entry align="right">2</entry>
            </row>
            <row>
              <entry>Security Groups</entry>
              <entry align="right">6</entry>
            </row>
            <row>
              <entry>Volumes</entry>
              <entry align="right">4</entry>
            </row>
            <row>
              <entry>Volume Storage (GB)</entry>
              <entry align="right">600 </entry>
            </row>
          </tbody>
        </tgroup>
</table>
<p>In addition to the quotas mentioned above, for every database instance that is created by a user,
        the necessary resources to create that instance will be deducted from the admin project
        quota. The user's database service quota will also be affected.</p>
</section>
<section id="dbaas_installation">
      <title>Install the Database Service </title>
      <ol id="ol_xct_5dz_nt">
        <!--<li> Source a stack RC file for the admin user and project. <ol><li> Log in to Horizon using the admin account.</li><li> Download the OpenStack RC file. <p><image placement="break" href="../../../media/quickstartDownloadRCFile.png" id="image_asb_jvy_nt"/></p></li><li>Use <codeph>scp</codeph> to copy the RC file over to the Deployer.</li><li>SSH to the Deployer and source the RC file. You will need to provide the same admin password that you used to log in to Horizon. <p><codeblock> source admin-openrc.sh</codeblock></p></li></ol></li>-->
        
        <li>Source the Virtual
          Environment.<codeblock>stack@hlm:~$ source /opt/stack/venv/dev_platform_installer-devplat_installer-1.0.0/bin/activate </codeblock></li>
         <li>List the available database versions to install:
          <codeblock>openstack hdpi list --os-cloud mycloud | grep database  </codeblock>The output
          should look similar
          to:<codeblock>database | wscatalog.#### | 2.0.0.0 | available</codeblock></li>
        <li>Select the most recent database version to install and view the details of the
          package:<codeblock>openstack hdpi show wscatalog.#### --os-cloud mycloud</codeblock></li>
        <li>Install the database
            service.<codeblock>openstack --os-cloud mycloud hdpi database install --package wscatalog.####</codeblock><note>Downloading
            may take a significant amount of time; depending on network traffic, it could take 20-90
            minutes.</note>During installation, this command will generate output similar to the
          following:
          <codeblock>Database is (downloaded)
Database is already (available)
Database is already configured
Launching stack...
Stack trove creating
Completed installing database
$</codeblock></li>
      </ol>
    </section>
<section id="configure_haproxy"><sectiondiv><p><b>Configure HAProxy</b></p>The following steps will configure HAProxy to receive and
        forward HTTP requests to the VM that hosts the REST API endpoint for the Database Service.<ol>
          <li> Identify all the API server IPs on the SVC network. <p>
              <codeblock>openstack server list | awk '/trove[0-9]*_api/{ print $4,"\t", substr($8,5) }'</codeblock>
            </p></li>
          <li> Identify the Virtual IP used to load balance the HPE Helion OpenStack
            services.<codeblock>openstack endpoint show database -c publicurl --format value</codeblock></li>
          <li> Update configuration of the HPE Helion OpenStack controller nodes. The following
            commands are run from the HLM deployer node.<ol>
              <li>Navigate to the following directory.
                <codeblock>cd ~/helion/my_cloud/config/haproxy/</codeblock></li>
              <li>Open the <codeph>haproxy.cfg.j2</codeph> file for editing. Add the following lines
                to the Custom Configuration section at the bottom of the
                  file.<codeblock>listen trove_api
bind &lt;<i>virtual IP from step 2</i>&gt;:8779
ssl crt <i>&lt;path to certificate file/certFileName&gt; </i>
option httpchk GET /
server trove-trove&lt;<i>n</i>&gt;_api-&lt;<i>uniqueid</i>&gt; &lt;<i>API server n's IP Address</i>&gt; check inter 2000 rise 2 fall 5
server trove-trove&lt;<i>n+1</i>&gt;_api-&lt;<i>uniqueid</i>&gt; &lt;<i>API server n+1's IP Address</i>&gt; check inter 2000 rise 2 fall 5</codeblock><note>The
                  last line in the codeblock should be repeated once for <b>each</b> API server
                  identified in step 1. </note><note>The <codeph>ssl cert</codeph> information in
                  the <b>bind</b> statement only applies if SSL has been enabled for public
                  endpoints. If SSL has not been enabled, omit this section of the statement. To
                  locate the filepath, navigate to
                    <codeph>~/helion/hos/ansible/roles/tls-frontend/defaults/main.yml</codeph> and
                  find the value of the <codeph>frontend_server_cert_directory</codeph> parameter.
                  To find the file name, open the
                    <codeph>/home/stack/helion/my_cloud/definition/data/network_groups.yml</codeph>
                  file and find the value for the <codeph>cert-file</codeph> parameter. </note></li>
              <li>Persist the updated configuration
                file.<codeblock>git commit -a -m "updated haproxy for database service"</codeblock></li>
              <li>Ready a new HLM
                deployment.<codeblock>cd ~/helion/hos/ansible
ansible-playbook -i hosts/localhost ready-deployment.yml</codeblock></li>
              <li>Update the HAProxy
                configuration.<codeblock>cd ~/scratch/ansible/next/hos/ansible
ansible-playbook -i hosts/verb_hosts FND-CLU-reconfigure.yml</codeblock></li>
            </ol></li>
          <li>Edit the IP table filtering rules to permit access by the Trove service on port
            8779.<!-- do we need to reload? Dan or Shayne will get back to us with HLM commands so it's applied properly--><codeblock>sudo iptables -I INPUT -p tcp --dport 8779 -j ACCEPT</codeblock></li>
        </ol></sectiondiv></section>

 
  </body>
</topic>
